% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/km_curve.R
\name{km_curve}
\alias{km_curve}
\alias{km_curve.data.frame}
\alias{km_curve.phsfit}
\title{Return Kaplan-Meier (K-M) curves from a PHS model}
\usage{
km_curve(object, ...)

\method{km_curve}{data.frame}(
  object,
  phs = "phs",
  age = "age",
  status = "status",
  interval = c(0, 1),
  age_range = 40:100,
  scale = FALSE,
  inverse = FALSE,
  ...
)

\method{km_curve}{phsfit}(
  object,
  phs = "phs",
  age = "age",
  status = "status",
  interval = c(0, 1),
  age_range = 40:100,
  scale = FALSE,
  inverse = FALSE,
  ...
)
}
\arguments{
\item{object}{An object for which a KM curve is desired. For method details,
see the specific method.}

\item{...}{Additional arguments (currently ignored)}

\item{phs}{String specifying the column name in \code{data} containing the polygenic
hazard score. Default \code{"phs"}.}

\item{age}{String specifying the column name in \code{data} containing the age of
each subject. Default \code{"age"}.}

\item{status}{String specifying the column name in \code{data} containing case/control
status (0 = censored, 1 = event). Default \code{"status"}.}

\item{interval}{Vector of length 2 giving lower and upper quantiles of PHS to
define the interval. By default includes all PHSes: \code{c(0, 1)}.}

\item{age_range}{Vector of ages over which curves should be calculated. Default \code{40:100}.}

\item{scale}{Logical; if TRUE, centers and scales PHS to unit variance. Default FALSE.}

\item{inverse}{Logical; if TRUE, reverses PHS direction. Default FALSE.}
}
\value{
A data.frame with columns \code{time}, \code{estimate}, \code{conf.low}, \code{conf.high}, and \code{cumhaz}.
}
\description{
\code{km_curve()} is a generic function that calculates Kaplan-Meier survival curves
from a coxph fit or directly from a data.frame. It returns a data.frame with
time, survival estimates, and upper/lower confidence intervals.
}
\examples{
phsfit <- fit_phs(test_data)
km_df <- km_curve(phsfit)

# data.frame interface
km_df2 <- km_curve(test_data)

\dontrun{
library(ggplot2)
ggplot(km_df, aes(x = time, y = estimate, ymin = conf.low, ymax = conf.high)) +
  geom_ribbon() +
  geom_step()
}

}
