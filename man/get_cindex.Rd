% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_cindex.R
\name{get_cindex}
\alias{get_cindex}
\title{Returns a concordance index from a coxph fit}
\usage{
get_cindex(
  data = NULL,
  phs = "phs",
  age = "age",
  status = "status",
  conf.int = FALSE,
  conf.level = 0.95,
  bootstrap.iterations
)
}
\arguments{
\item{data}{an optional data.frame containing the variables for phs, age, and status}

\item{phs}{an optional string specifying the column name in \code{data} containing the polygenic hazard score for each subject. The default is "phs"}

\item{age}{an optional string specifying the column name in \code{data} containing the age of each subject. For cases, this should be the age at event (e.g., diagnosis) and for controls this should be age of censoring (e.g., last observation). The default is "age"}

\item{status}{an optional string specifying the column name in \code{data} containing case-control status (0 = censored, 1 = event). The default is "status"}

\item{conf.int}{logical. if \code{TRUE} performs bootstrap and returns 95\% confidence intervals. Default = \code{FALSE}.}

\item{conf.level}{The confidence level to use for the confidence interval if conf.int = TRUE. Must be strictly greater than 0 and less than 1. Defaults to 0.95, which corresponds to a 95 percent confidence interval.}

\item{bootstrap.iterations}{Number of bootstrap iterations to run. Required if boot = \code{TRUE}. Default = 1000.}
}
\value{
A numeric hazard ratio or a list containing HR and the 95\% confidence intervals from bootstrap
}
\description{
This function returns the concordance index from a coxph fit and optionally
performs bootstrap resampling to return 95\% confidence intervals.
The data can either be provided as a data.frame with columns containing
the phs, age, and status of each individual or separate vectors containing
each of these values. The columns in \code{data} default to 'phs', 'age', and
'status', but any arbitrary column names can be used if named explicitly.
}
\examples{

c_index <- get_cindex(test_data, conf.int = TRUE, bootstrap.iterations = 300)

}
