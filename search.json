[{"path":"https://amorris28.github.io/hazrd/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 hazrd authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://amorris28.github.io/hazrd/articles/hazrd.html","id":"generating-test-statistics-and-confidence-intervals","dir":"Articles","previous_headings":"","what":"Generating test statistics and confidence intervals","title":"Getting started with `{hazrd}`","text":", calculate hazard ratio comparing mean top 20% PHSes mean bottom 20% (.e., HR80_20). can also generate 95% confidence intervals using bootstrapping. get_ function also returns output bootstrap iteration $iters user can plot calculate confidence intervals:  Similarly, calculate odds ratio age 70 top 20% bottom 20% PHSes.  Return concordance index 95% confidence intervals coxph fit: Finally, plot Kaplan-Meier curves confidence intervals centiles interest.","code":"HR80_20 = get_hr(test_data, bootstrap.iterations = 300) str(HR80_20) #> List of 3 #>  $ value    : num 8.17 #>  $ conf.low : num 6.17 #>  $ conf.high: num 11.4 ggplot(mapping = aes(x = HR80_20$iters)) +     geom_histogram(binwidth = 2/3) +     geom_vline(xintercept = HR80_20$HR, color = \"red\") +     geom_vline(xintercept = HR80_20$conf.low) +     geom_vline(xintercept = HR80_20$conf.high) +         theme_minimal() +         labs(x = \"HR80_20\", y = \"Count\") OR80_20 = get_or(test_data, or_age = 70, bootstrap.iterations = 300) str(OR80_20) #> List of 3 #>  $ value    : num 8.52 #>  $ conf.low : num 4.53 #>  $ conf.high: num 17.1 ggplot(mapping = aes(x = OR80_20$iters)) +     geom_histogram(binwidth = 3/2) +     geom_vline(xintercept = OR80_20$OR, color = \"red\") +     geom_vline(xintercept = OR80_20$conf.low) +     geom_vline(xintercept = OR80_20$conf.high) +         theme_minimal() +         labs(x = \"OR80_20\", y = \"Count\") c_index = get_cindex(test_data, bootstrap.iterations = 300) str(c_index) #> List of 3 #>  $ value    : num 0.708 #>  $ conf.low : num 0.678 #>  $ conf.high: num 0.734 curves = data.frame(curve0_20 = c(0,   0.2),                     curve20_70 = c(0.2, 0.7),                     curve80_98 = c(0.8, 0.98),                     curve98_100 = c(0.98, 1.0))  label_generator = function(x, y) {     x = x * 100     y = y * 100     out = paste0(\"PHS \", x, \"-\", y, \"th centile\")     return(out) }  km_curves = data.frame() for (i in seq_len(length(curves))) {     curven <- km_curve(test_data,                          interval = curves[[i]],                        age_range = 40:100,                         scale = FALSE,                         inverse = FALSE)     curven$label = label_generator(curves[1, i], curves[2, i])     km_curves = rbind(km_curves, curven) }   ggplot(km_curves, aes(x = time,                        y = estimate,                       ymin = conf.low,                       ymax = conf.high,                       col = label,                       fill = label)) +     geom_ribbon(alpha = 0.1,                 color = 0) +     geom_step() +     theme_minimal() +     xlim(40, 100) +      ylim(0, 1) +     labs(x = \"Age\", y = \"Disease-free Survival\") +     scale_color_brewer(palette = \"Set1\",                        name = \"Centile\") +     scale_fill_brewer(palette = \"Set1\",                        name = \"Centile\") #> Warning: Removed 16 rows containing missing values or values outside the scale range #> (`geom_ribbon()`). #> Warning: Removed 15 rows containing missing values or values outside the scale range #> (`geom_step()`)."},{"path":[]},{"path":"https://amorris28.github.io/hazrd/articles/hazrd.html","id":"data-format","dir":"Articles","previous_headings":"More advanced topics","what":"Data format","title":"Getting started with `{hazrd}`","text":"functions package (e.g., get_hr, get_or, phs_hist, etc.) can accept data several formats. data.frame contains standard columns phs, age, status, can simply pass data.frame object first argument: data stored data.frame non-standard column names, e.g., HazardScores, CaseControl, AgeLastObs, can specify column names separate arguments:","code":"get_hr(test_data) |>      str() #> List of 1 #>  $ value: num 8.17 test_data2 = with(test_data, data.frame(HazardScores = phs,                                          CaseControl = status,                                          AgeLastObs = age)) head(test_data2) #>   HazardScores CaseControl AgeLastObs #> 1    0.8425735           1   67.95011 #> 2    1.1151321           0   56.31356 #> 3   -0.3777455           1   72.94103 #> 4    0.1201511           1   82.01571 #> 5   -0.4041602           1   74.33629 #> 6   -0.4531890           1   77.15814 get_hr(test_data2,         phs = \"HazardScores\",         status = \"CaseControl\",         age = \"AgeLastObs\") |>      str() #> List of 1 #>  $ value: num 8.17"},{"path":[]},{"path":"https://amorris28.github.io/hazrd/articles/hazrd.html","id":"specifying-intervals","dir":"Articles","previous_headings":"More advanced topics > Hazard ratios and odds ratios","what":"Specifying intervals","title":"Getting started with `{hazrd}`","text":"get_hr function allows several options customizing hazard ratios. default, calculates HR80_20, compares top 20% PHSes bottom 20%. However, custom intervals can specified using numerator denominator arguments. default arguments. one value passed numerator calculates hazard ratio interval 0.8:Inf. Similarly, denominator use -Inf:0.2. However, two values can specified vector specify particular range. example, want lower interval middle 40% PHSes, can specify denominator = c(0.3, 0.7). interval specifications odds ratios get_or get_hr. difference odds ratio must calculated particular age, passed or_age argument:","code":"get_hr(test_data,        numerator = c(0.8, 1.0),        denominator = c(0.0, 0.2)) |>      str() #> List of 1 #>  $ value: num 8.17 get_hr(test_data,        numerator = c(0.8, 1.0),        denominator = c(0.3, 0.7)) |>      str() #> List of 1 #>  $ value: num 3.04 get_or(test_data,        or_age = 70,        numerator = c(0.8, 1.0),        denominator = c(0.3, 0.7)) |>      str() #> List of 1 #>  $ value: num 3.83"},{"path":"https://amorris28.github.io/hazrd/articles/hazrd.html","id":"confidence-intervals-from-bootstrapping","dir":"Articles","previous_headings":"More advanced topics > Hazard ratios and odds ratios","what":"Confidence intervals from bootstrapping","title":"Getting started with `{hazrd}`","text":"95% confidence intervals estimates get_hr, get_or, get_cindex functions can generated bootstrapping. done specifying number bootstrap iterations bootstrap.iterations =. case, get_hr returns list containing hazard ratio values upper lower 95% confidence intervals well HR estimates bootstrap iteration iters.","code":"get_hr(test_data,        bootstrap.iterations = 300) |>      str() #> List of 3 #>  $ value    : num 8.17 #>  $ conf.low : num 6.1 #>  $ conf.high: num 11.1"},{"path":"https://amorris28.github.io/hazrd/articles/hazrd.html","id":"plotting-curves","dir":"Articles","previous_headings":"More advanced topics","what":"Plotting curves","title":"Getting started with `{hazrd}`","text":"plot Kaplan-Meier curves, can use km_curve function return single Kaplan-Meier curve given interval. Plotting must performed manually returned curves. interval specifies lower upper quantile interval. case, K-M curve top 20% samples (0.8:1.0) returned. addition, age_range specifies ages curve generated. Can order 40:100 age--diagnosis similar. Alternatively, can 0:10 , exmaple, age conversion AD MCI diagnosis. can generate multiple curves various intervals get data.frame: plot :","code":"curven <- km_curve(test_data,                          interval = c(0.80, 1.00),                         age_range = 40:100,                         scale = FALSE,                         inverse = FALSE) curves = data.frame(curve0_20 = c(0,   0.2),                     curve20_70 = c(0.2, 0.7),                     curve80_98 = c(0.8, 0.98),                     curve98_100 = c(0.98, 1.0))  label_generator = function(x, y) {     x = x * 100     y = y * 100     out = paste0(\"PHS \", x, \"-\", y, \"th centile\")     return(out) }  km_curves = data.frame() for (i in seq_len(length(curves))) {     curven <- km_curve(test_data,                          interval = curves[[i]],                        age_range = 40:100,                         scale = FALSE,                         inverse = FALSE)     curven$label = label_generator(curves[1, i], curves[2, i])     km_curves = rbind(km_curves, curven) } ggplot(km_curves, aes(x = time,                        y = estimate,                       ymin = conf.low,                       ymax = conf.high,                       col = label,                       fill = label)) +     geom_ribbon(alpha = 0.1,                 color = 0) +     geom_step() +     theme_minimal() +     xlim(40, 100) +      ylim(0, 1) +     labs(x = \"Age\", y = \"Disease-free Survival\") +     scale_color_brewer(palette = \"Set1\",                        name = \"Centile\") +     scale_fill_brewer(palette = \"Set1\",                        name = \"Centile\") #> Warning: Removed 16 rows containing missing values or values outside the scale range #> (`geom_ribbon()`). #> Warning: Removed 15 rows containing missing values or values outside the scale range #> (`geom_step()`)."},{"path":"https://amorris28.github.io/hazrd/articles/hazrd.html","id":"individual-prediction","dir":"Articles","previous_headings":"More advanced topics","what":"Individual Prediction","title":"Getting started with `{hazrd}`","text":"possible generate lookup table perform individual prediction new, un-observed individual calculated PHS score. , fit model using data generate predicted curves 99 percentiles (1 99%). output curves associated PHS score percentile. removes connection subject-level data safe export secure computing platforms. can plot prediction closest percentile new individual’s PHS example workflow: Export lookup table computing platform identify percentile new subject. Based toy dataset, subject PHS 1.6 approximately 94th percentile. , plot predicted curve median percentiel (50%) gray shaded area confidence intervals, individual line every percentile 1 99, highlighted red predicted risk curve confidence intervals “new” hypothetical subject PHS 1.6 (94th percentile):","code":"# Create the lookup table (on a secure computing platform using # individual-level data)  lookup_table = create_lookup_table(test_data) ggplot(lookup_table[lookup_table$percentile == 0.50, ],         aes(x = time, y = surv, ymin = lower, ymax = upper)) +     geom_line() +     geom_ribbon(alpha = 0.5) +     theme_classic() +     geom_line(aes(x = time, y = surv, group = percentile), data = lookup_table, alpha = 0.1) +     geom_line(aes(x = time, y = surv, group = percentile),                  data = lookup_table[lookup_table$percentile == 0.94, ],                  color = \"red\") +     geom_ribbon(aes(x = time, y = surv, ymin = lower, ymax = upper),                  data = lookup_table[lookup_table$percentile == 0.94, ],                  alpha = 0.5, fill = \"red\") +     labs(x = \"Age\", y = \"Disease-free Survival\")"},{"path":"https://amorris28.github.io/hazrd/articles/hazrd.html","id":"percentiles-versus-quintiles-for-comparison-and-prediction","dir":"Articles","previous_headings":"","what":"Percentiles versus Quintiles for comparison and prediction","title":"Getting started with `{hazrd}`","text":"literature PHS, least two ways folks visualize survival estimates different PHS models. One compare 20th percentile 80th percentile. compare quintiles, , top 20% PHSes bottom 20%. explanation estimates compare:","code":""},{"path":"https://amorris28.github.io/hazrd/articles/hazrd.html","id":"percentiles","dir":"Articles","previous_headings":"Percentiles versus Quintiles for comparison and prediction","what":"Percentiles","title":"Getting started with `{hazrd}`","text":", blue line 20th percentile, green line 50th percentile, red line 80th percentile.","code":"library(survival) ages = seq(40, 100, length.out = 10000)  # Fit the coxph model cp_fit = coxph(Surv(age, status) ~ phs, data = test_data)  # Calculate the PHS at each percentile of interest phs0.2 = as.numeric(quantile(test_data$phs, 0.2)) phs0.8 = as.numeric(quantile(test_data$phs, 0.8)) phs0.5 = as.numeric(quantile(test_data$phs, 0.5))   # Generate some new data for prediction using these PHS scores new_data0.2 <- data.frame(status = 1,                          age = ages,                          phs = phs0.2) new_data0.8 = new_data0.2 new_data0.8$phs = phs0.8 new_data0.5 = new_data0.2 new_data0.5$phs = phs0.5  # Using our original model, generate a predicted survival curve cp_predict_0.2 <- predict(cp_fit, new_data0.2, type = \"survival\") cp_predict_0.8 <- predict(cp_fit, new_data0.8, type = \"survival\") cp_predict_0.5 <- predict(cp_fit, new_data0.5, type = \"survival\")  ggplot() +     geom_step(aes(x = age, y = cp_predict_0.2), data = new_data0.2, color = 4) +     geom_step(aes(x = age, y = cp_predict_0.8), data = new_data0.8, color = 2) +     geom_step(aes(x = age, y = cp_predict_0.5), data = new_data0.5, color = 3) +     labs(x = \"Age\", y = \"Disease-free Survival\") +     theme_minimal()"},{"path":"https://amorris28.github.io/hazrd/articles/hazrd.html","id":"quintiles","dir":"Articles","previous_headings":"Percentiles versus Quintiles for comparison and prediction","what":"Quintiles","title":"Getting started with `{hazrd}`","text":", blue line survival curve bottom 20% PHSes, green line survival curve middle 60% PHSes (20-80%), red line survival curve top 20% PHSes. Lastly, can compare two approaches see generate different survival curves:  , blue curves quintile curves group-based curves red curves percentile-based curves. 0-20 80-100 curves close exactly 10% percentile 90% percentile:  blue curves group-based curves (0-20, 20-80, 80-100%) pink curves prediction 10th percentile 90th percentile. Now, comparing 90th percentile individual “empirical” curve subjects top quintile:  , blue prediction 90th percentile full PHS model. Red prediction 80-100% group “PHS Group” model. green “empirical” survival curve just individuals 80-100% group. One thing want add way test proportional hazard assumptions model cox.zph function.","code":"# Cut the PHSes into groups based on percentile. # Here, we are splitting them into 0-20%, 20-80%, and 80-100% test_data$phs_group <- cut(test_data$phs, c(-Inf, phs0.2, phs0.8, Inf),                     labels = c(\"0-20\", \"20-80\", \"80-100\"))  # Fit the model, this time with group as the predictor rather than the PHS cp_fit_group <- coxph(Surv(age, status) ~ phs_group, test_data)  # Generate some new data for prediction new_data0020 <- data.frame(status = 1,                            age = ages,                            phs_group = \"0-20\") new_data2080 <- new_data0020 new_data2080$phs_group = \"20-80\" new_data80100 <- new_data0020 new_data80100$phs_group = \"80-100\"  # Generate a predicted survival curve cp_predict_0020 <- predict(cp_fit_group, new_data0020, type = \"survival\") cp_predict_2080 <- predict(cp_fit_group, new_data2080, type = \"survival\") cp_predict_80100 <- predict(cp_fit_group, new_data80100, type = \"survival\")  # Plot the curves for each group ggplot() +     geom_step(aes(x = age, y = cp_predict_0020), data = new_data0020, color = 4) +     geom_step(aes(x = age, y = cp_predict_80100), data = new_data80100, color = 2) +     geom_step(aes(x = age, y = cp_predict_2080), data = new_data2080, color = 3) +     labs(x = \"Age\", y = \"Disease-free Survival\") +     theme_minimal() ggplot() +     geom_step(aes(x = age, y = cp_predict_0020), data = new_data0020, color = 4) +     geom_step(aes(x = age, y = cp_predict_2080), data = new_data2080, color = 4) +     geom_step(aes(x = age, y = cp_predict_80100), data = new_data80100, color = 4) +     geom_step(aes(x = age, y = cp_predict_0.2), data = new_data0.2, color = 2) +     geom_step(aes(x = age, y = cp_predict_0.8), data = new_data0.8, color = 2) +     geom_step(aes(x = age, y = cp_predict_0.5), data = new_data0.5, color = 2) +     labs(x = \"Age\", y = \"Disease-free Survival\") +     theme_minimal() phs0.1 = as.numeric(quantile(test_data$phs, 0.1)) phs0.9 = as.numeric(quantile(test_data$phs, 0.9)) new_data0.1 = new_data0.2 new_data0.1$phs = phs0.1 new_data0.9 = new_data0.2 new_data0.9$phs = phs0.9 cp_predict_0.1 <- predict(cp_fit, new_data0.1, type = \"survival\") cp_predict_0.9 <- predict(cp_fit, new_data0.9, type = \"survival\")  ggplot() +     geom_step(aes(x = age, y = cp_predict_0020), data = new_data0020, color = 4) +     geom_step(aes(x = age, y = cp_predict_2080), data = new_data2080, color = 4) +     geom_step(aes(x = age, y = cp_predict_80100), data = new_data80100, color = 4) +     labs(x = \"Age\", y = \"Disease-free Survival\") +     theme_minimal() +     geom_step(aes(x = age, y = cp_predict_0.1), data = new_data0.1, color = 6)  +     geom_step(aes(x = age, y = cp_predict_0.9), data = new_data0.9, color = 6) # This is the curve for the group in the 80-100 quintile test_data80_100 = test_data[test_data$phs_group == \"80-100\", ]  surv_80_100 = survfit(Surv(age, status) ~ 1, test_data80_100) surv_80_100_data = data.frame(age = surv_80_100$time,                               surv = surv_80_100$surv)  ggplot() +      geom_step(aes(x = ages, y = cp_predict_0.9), data = new_data0.9, color = 4) + # blue     geom_step(aes(x = age, y = cp_predict_80100), data = new_data80100, color = 2) + #red     geom_step(aes(x = age, y = surv), data = surv_80_100_data, color = 3) + # green     labs(x = \"Age\", y = \"Disease-free Survival\") +     theme_minimal() ph_fit = cox.zph(cp_fit)  # Not sig. so proportional hazards assumption is met print(ph_fit) #>        chisq df    p #> phs    0.358  1 0.55 #> GLOBAL 0.358  1 0.55  # Residual plot visualizing this: plot(ph_fit)"},{"path":"https://amorris28.github.io/hazrd/articles/hazrd.html","id":"example-script","dir":"Articles","previous_headings":"","what":"Example Script","title":"Getting started with `{hazrd}`","text":"example script run entire hazrd analysis command line:","code":"Rscript hazrd_script.R phs.tsv metadata.tsv FALSE reports/ ######################################### # First argument: PHS file # tab delimited file, with or without header, first column ID, second column PHS score # file basename used as prefix for output # # Second argument: metadata file # tab delimited file with or without header, first column id,  second column age,  # third column status (0 or 1). Additional columns will be ignored. # # Third argument:  # boolean (i.e., TRUE or FALSE) indicating whether to inverse (x * -1) the PHS scores # to reverse the direction of effect. # # Fourth argument: # path to output directory, e.g., \"reports/\" # if the directory does not exist it will be created  ######################################## # Load packages library(hazrd) library(ggplot2)   ####################################### # parse arguments  args = commandArgs(trailingOnly=TRUE)  model_file = args[1] # PHS file  # model = gsub(\"\\\\_.*\",\"\", basename(args[1])) # filename for output model = gsub(\"\\\\..*\",\"\", basename(args[1])) # filename for output  metadata = read.table(args[2], col.names = c(\"id\", \"age\", \"status\")) # Phenotype data  inverse = args[3]  output = args[4]  ######################################### # Import PHS data  phs = read.table(model_file, col.names = c(\"id\", \"phs\"))  print(head(phs))  phs$phs = scale(phs$phs, center = TRUE, scale = TRUE)  if (inverse) {phs$phs = phs$phs * -1}  combined_data = merge(metadata, phs, by = \"id\")  combined_data = combined_data[!(is.na(combined_data$phs)), ]  ######################################### # Analyze PHS data  # PHS Histogram phs_hist =      phs_hist(combined_data, normalize = TRUE) +     labs(title = model) + theme(aspect.ratio=1)  ggsave(paste0(output, model, \"_hist.png\"), phs_hist,         units = \"px\", height = 1300, width = 1300, create.dir = TRUE)  # Performance metrics   HR80_20 = get_hr(combined_data, bootstrap.iterations = 300) ages = c(60, 70, 80) OR80_20 = lapply(ages, function(x) {get_or(combined_data, or_age = x, bootstrap.iterations = 300)}) c_index = get_cindex(combined_data, bootstrap.iterations = 300)  HR80_20$age = NA c_index$age = NA indices = list(HR80_20, OR80_20[[1]], OR80_20[[2]], OR80_20[[3]], c_index)  perform = do.call(rbind.data.frame, lapply(indices, function(x){data.frame(index = x$index,                                                                   value = x$value,                                                                   conf.low = x$conf.low,                                                                   conf.high = x$conf.high,                                                                   age = x$age)})) perform = cbind(model, perform) write.table(perform, paste0(output, model, \"_performance.tsv\"), sep = \"\\t\", row.names = FALSE)  # KM Curves curves = data.frame(curve0_20 = c(0,   0.2),                     curve20_70 = c(0.2, 0.7),                     curve80_98 = c(0.8, 0.98),                     curve98_100 = c(0.98, 1.0))  label_generator = function(x, y) {   x = x * 100   y = y * 100   out = paste0(\"PHS \", x, \"-\", y, \"th centile\")   return(out) }  km_curves = data.frame() for (i in seq_len(length(curves))) {   curven <- km_curve(combined_data,                        interval = curves[[i]],                      age_range = 40:100,                       scale = FALSE,                       inverse = FALSE)   curven$label = label_generator(curves[1, i], curves[2, i])   km_curves = rbind(km_curves, curven) }   km_curve = ggplot(km_curves, aes(x = time,                        y = estimate,                       ymin = conf.low,                       ymax = conf.high,                       col = label,                       fill = label)) +   geom_ribbon(alpha = 0.1,               color = 0) +   geom_step() +   theme_minimal() +   xlim(40, 100) +    ylim(0, 1) +   labs(x = \"Age\", y = \"Disease-free Survival\", title = model) +   scale_color_brewer(palette = \"Set1\",                      name = \"Centile\") +   scale_fill_brewer(palette = \"Set1\",                     name = \"Centile\")  + theme(aspect.ratio=1)  ggsave(paste0(output, model, \"_km_curve.png\"), km_curve,        units = \"px\", height = 1300, width = 1600, create.dir = TRUE)"},{"path":"https://amorris28.github.io/hazrd/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrew Morris. Author, maintainer.","code":""},{"path":"https://amorris28.github.io/hazrd/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Morris (2025). hazrd: Polygenic Hazard Score Cox Proportional Hazards Model. R package version 0.1.0, https://amorris28.github.io/hazrd/.","code":"@Manual{,   title = {hazrd: Polygenic Hazard Score with Cox Proportional Hazards Model},   author = {Andrew Morris},   year = {2025},   note = {R package version 0.1.0},   url = {https://amorris28.github.io/hazrd/}, }"},{"path":"https://amorris28.github.io/hazrd/index.html","id":"hazrd","dir":"","previous_headings":"","what":"Polygenic Hazard Score with Cox Proportional Hazards Model","title":"Polygenic Hazard Score with Cox Proportional Hazards Model","text":"goal hazrd simplify standardize development testing polygenic hazard score models opinionated way based mainly past work PHS repo. Currently, functionality focuses external validation PHS models. includes calculation standard statistics (80-20 hazard ratios, 80-20 odds ratios, concordance index) plotting Kaplan-Meier curves cumulative incidence curves. future, expanded model development, internal validation, imaging risk scores, multimodal hazard scores, functions related Digital Avatar.","code":""},{"path":[]},{"path":"https://amorris28.github.io/hazrd/index.html","id":"github","dir":"","previous_headings":"Installation","what":"Github","title":"Polygenic Hazard Score with Cox Proportional Hazards Model","text":"install recent release Github, go release page, scroll Assets, download “Source code (tar.gz)” file. , R, run:","code":"install.packages(\"hazrd-0.1.0.tar.gz\", repos = NULL, type=\"source\")"},{"path":"https://amorris28.github.io/hazrd/index.html","id":"using-devtools","dir":"","previous_headings":"Installation","what":"Using devtools","title":"Polygenic Hazard Score with Cox Proportional Hazards Model","text":"--date installation changes since last release, install development version hazrd GitHub cloning repository: opening R installing package: Replace \"hazrd\" path repository local computer.","code":"git clone git@github.com:amorris28/hazrd.git devtools::install(\"hazrd\")"},{"path":"https://amorris28.github.io/hazrd/index.html","id":"on-a-remote-cluster","dir":"","previous_headings":"Installation > Using devtools","what":"On a remote cluster","title":"Polygenic Hazard Score with Cox Proportional Hazards Model","text":"install development version remote cluster, TSD, build tarball local clone Github repo: can install .tar.gz install.packages R:","code":"devtools::build(\"hazrd\") install.packages(\"hazrd_0.1.0.tar.gz\", repos = NULL, type=\"source\")"},{"path":"https://amorris28.github.io/hazrd/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Polygenic Hazard Score with Cox Proportional Hazards Model","text":"introduction use package, please see vignettes hazrd pkgdown website.","code":""},{"path":"https://amorris28.github.io/hazrd/reference/boot_conf.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap confidence intervals for a custom statistic — boot_conf","title":"Bootstrap confidence intervals for a custom statistic — boot_conf","text":"function allows advanced users compute bootstrap confidence intervals statistic long function passed f returns single value statistic. users, built-functions get_hr recommended.","code":""},{"path":"https://amorris28.github.io/hazrd/reference/boot_conf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap confidence intervals for a custom statistic — boot_conf","text":"","code":"boot_conf(data, bootstrap.iterations, conf.level = 0.95, f, ...)"},{"path":"https://amorris28.github.io/hazrd/reference/boot_conf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap confidence intervals for a custom statistic — boot_conf","text":"data data.frame containing columns phs, age, status bootstrap.iterations number bootstrap iterations run. conf.level confidence level use confidence interval. Must strictly greater 0 less 1. Defaults 0.95, corresponds 95 percent confidence interval. f name function perform bootstrapping . ... arguments passed f().","code":""},{"path":"https://amorris28.github.io/hazrd/reference/boot_conf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap confidence intervals for a custom statistic — boot_conf","text":"list confidence intervals","code":""},{"path":"https://amorris28.github.io/hazrd/reference/calc_cindex.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a C-index for a PHS model (low-level) — calc_cindex","title":"Calculate a C-index for a PHS model (low-level) — calc_cindex","text":"function performs actual C-index calculation used internally get_cindex. users call get_cindex() directly. function exported provide transparency reproducibility.","code":""},{"path":"https://amorris28.github.io/hazrd/reference/calc_cindex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a C-index for a PHS model (low-level) — calc_cindex","text":"","code":"calc_cindex(data)"},{"path":"https://amorris28.github.io/hazrd/reference/calc_cindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a C-index for a PHS model (low-level) — calc_cindex","text":"data data.frame containing columns phs, age, status","code":""},{"path":"https://amorris28.github.io/hazrd/reference/calc_cindex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a C-index for a PHS model (low-level) — calc_cindex","text":"numeric hazard ratio","code":""},{"path":"https://amorris28.github.io/hazrd/reference/calc_hr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a hazard ratio between two percentile groups (low-level) — calc_hr","title":"Calculate a hazard ratio between two percentile groups (low-level) — calc_hr","text":"function performs actual HR calculation used internally get_hr. users call get_hr() directly. function exported provide transparency reproducibility.","code":""},{"path":"https://amorris28.github.io/hazrd/reference/calc_hr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a hazard ratio between two percentile groups (low-level) — calc_hr","text":"","code":"calc_hr(data, numerator, denominator)"},{"path":"https://amorris28.github.io/hazrd/reference/calc_hr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a hazard ratio between two percentile groups (low-level) — calc_hr","text":"data data.frame containing columns phs, age, status numerator vector specifying quantiles numerator (e.g., c(0.80, 0.98)). denominator vector specifying quantiles denominator (e.g., c(0.30, 0.70)).","code":""},{"path":"https://amorris28.github.io/hazrd/reference/calc_hr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a hazard ratio between two percentile groups (low-level) — calc_hr","text":"numeric hazard ratio","code":""},{"path":"https://amorris28.github.io/hazrd/reference/calc_hrsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a hazard ratio for a one standard deviation increase in PHS (low-level) — calc_hrsd","title":"Calculate a hazard ratio for a one standard deviation increase in PHS (low-level) — calc_hrsd","text":"function performs actual HR calculation used internally get_hrsd. users call get_hrsd() directly. function exported provide transparency reproducibility.","code":""},{"path":"https://amorris28.github.io/hazrd/reference/calc_hrsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a hazard ratio for a one standard deviation increase in PHS (low-level) — calc_hrsd","text":"","code":"calc_hrsd(data)"},{"path":"https://amorris28.github.io/hazrd/reference/calc_hrsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a hazard ratio for a one standard deviation increase in PHS (low-level) — calc_hrsd","text":"data data.frame containing columns phs, age, status","code":""},{"path":"https://amorris28.github.io/hazrd/reference/calc_hrsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a hazard ratio for a one standard deviation increase in PHS (low-level) — calc_hrsd","text":"numeric hazard ratio","code":""},{"path":"https://amorris28.github.io/hazrd/reference/calc_or.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a odds ratio between two percentile groups (low-level) — calc_or","title":"Calculate a odds ratio between two percentile groups (low-level) — calc_or","text":"function performs actual calculation used internally get_or. users call get_or() directly. function exported provide transparency reproducibility.","code":""},{"path":"https://amorris28.github.io/hazrd/reference/calc_or.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a odds ratio between two percentile groups (low-level) — calc_or","text":"","code":"calc_or(data, or_age, numerator, denominator)"},{"path":"https://amorris28.github.io/hazrd/reference/calc_or.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a odds ratio between two percentile groups (low-level) — calc_or","text":"data data.frame containing columns phs, age, status or_age integer specifying age odds ratio calculated numerator vector specifying quantiles numerator (e.g., c(0.80, 0.98)). denominator vector specifying quantiles denominator (e.g., c(0.30, 0.70)).","code":""},{"path":"https://amorris28.github.io/hazrd/reference/calc_or.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a odds ratio between two percentile groups (low-level) — calc_or","text":"numeric odds ratio","code":""},{"path":"https://amorris28.github.io/hazrd/reference/create_lookup_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a lookup table for individual prediction of risk based on PHS — create_lookup_table","title":"Creates a lookup table for individual prediction of risk based on PHS — create_lookup_table","text":"function takes data set phs, age, status returns two matrices: one PHS score 99 percentiles (1-99\\ predicted K-M curve (plus confidence intervals) percentiles. two tables contain now individualized subject information can exported predict risk new subjects PHS scores.","code":""},{"path":"https://amorris28.github.io/hazrd/reference/create_lookup_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a lookup table for individual prediction of risk based on PHS — create_lookup_table","text":"","code":"create_lookup_table(data = NULL, phs = \"phs\", age = \"age\", status = \"status\")"},{"path":"https://amorris28.github.io/hazrd/reference/create_lookup_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a lookup table for individual prediction of risk based on PHS — create_lookup_table","text":"data optional data.frame containing variables phs, age, status phs optional string specifying column name data containing polygenic hazard score subject unquoted name vector containing values. default \"phs\" age optional string specifying column name data containing age subject unquoted name vector containing values. cases, age event (e.g., diagnosis) controls age censoring (e.g., last observation). default \"age\" status optional string specifying column name data containing case-control status (0 = censored, 1 = event) unquoted name vector containing values. default \"status\"","code":""},{"path":"https://amorris28.github.io/hazrd/reference/create_lookup_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a lookup table for individual prediction of risk based on PHS — create_lookup_table","text":"list containing two tables","code":""},{"path":"https://amorris28.github.io/hazrd/reference/create_lookup_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a lookup table for individual prediction of risk based on PHS — create_lookup_table","text":"","code":"lookup_table <- create_lookup_table(test_data)"},{"path":"https://amorris28.github.io/hazrd/reference/cum_inc.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Cumulative Incidence — cum_inc","title":"Compute Cumulative Incidence — cum_inc","text":"Compute Cumulative Incidence","code":""},{"path":"https://amorris28.github.io/hazrd/reference/cum_inc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Cumulative Incidence — cum_inc","text":"","code":"cum_inc(   country,   inc_file = \"prostate_cancer_incidence_country.csv\",   prop_file = \"intermediate_high_proportions_CAP.csv\" )"},{"path":"https://amorris28.github.io/hazrd/reference/cum_inc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Cumulative Incidence — cum_inc","text":"country country name inc_file incidence file name prop_file proportions file name","code":""},{"path":"https://amorris28.github.io/hazrd/reference/cum_inc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Cumulative Incidence — cum_inc","text":"list cumulative incidence incidence data frames","code":""},{"path":"https://amorris28.github.io/hazrd/reference/fit_phs.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a polygenic hazard score (PHS) model — fit_phs","title":"Fit a polygenic hazard score (PHS) model — fit_phs","text":"fit_phs() generic function fits PHS model either formula interface (similar coxph()) directly data frame specified columns. returns object class \"phsfit\", can passed get_hr(), get_or(), get_cindex(), etc.","code":""},{"path":"https://amorris28.github.io/hazrd/reference/fit_phs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a polygenic hazard score (PHS) model — fit_phs","text":"","code":"fit_phs(object, ...)  # S3 method for class 'formula' fit_phs(object, data, bootstrap.iterations = NULL, conf.level = 0.95, ...)  # S3 method for class 'data.frame' fit_phs(   object,   age = \"age\",   status = \"status\",   phs = \"phs\",   bootstrap.iterations = NULL,   conf.level = 0.95,   ... )"},{"path":"https://amorris28.github.io/hazrd/reference/fit_phs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a polygenic hazard score (PHS) model — fit_phs","text":"object data.frame containing variables phs, age, status ... Additional arguments (currently ignored) data data.frame containing variables formula bootstrap.iterations Number bootstrap iterations run generate confidence intervals. conf.level confidence level use confidence interval conf.int = TRUE. Must strictly greater 0 less 1. Defaults 0.95, corresponds 95 percent confidence interval. age optional string specifying column name data containing age subject. cases, age event (e.g., diagnosis) controls age censoring (e.g., last observation). default \"age\" status optional string specifying column name data containing case-control status (0 = censored, 1 = event). default \"status\" phs optional string specifying column name data containing polygenic hazard score subject. default \"phs\"","code":""},{"path":"https://amorris28.github.io/hazrd/reference/fit_phs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a polygenic hazard score (PHS) model — fit_phs","text":"object class \"phsfit\".","code":""},{"path":[]},{"path":"https://amorris28.github.io/hazrd/reference/fit_phs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a polygenic hazard score (PHS) model — fit_phs","text":"","code":"# Formula interface: fit_phs(Surv(age, status) ~ phs, data = test_data) #> $model #> Call: #> survival::coxph(formula = formula, data = data) #>  #>        coef exp(coef) se(coef)     z      p #> phs 0.72135   2.05721  0.05065 14.24 <2e-16 #>  #> Likelihood ratio test=200.8  on 1 df, p=< 2.2e-16 #> n= 1000, number of events= 378  #>  #> $boot #> NULL #>  #> $formula #> Surv(age, status) ~ phs #> <environment: 0x5574e86b2e88> #>  #> $data #>               phs       age status #> 1     0.842573540  67.95011      1 #> 2     1.115132087  56.31356      0 #> 3    -0.377745501  72.94103      1 #> 4     0.120151115  82.01571      1 #> 5    -0.404160156  74.33629      1 #> 6    -0.453188973  77.15814      1 #> 7     0.028489249  55.05799      0 #> 8     0.792950387  75.20764      0 #> 9     1.954165566  63.79295      0 #> 10    0.271294166  83.35571      1 #> 11    0.909511491  52.94639      0 #> 12   -0.771593777  73.79693      1 #> 13    0.073730272  75.36130      0 #> 14   -0.252881199  70.69446      0 #> 15   -0.328190509  91.81669      0 #> 16   -0.744533357  62.33691      0 #> 17    0.273766213  65.31057      0 #> 18    0.704915057  68.07979      1 #> 19    0.325803466  77.47581      0 #> 20    0.781495189  65.11660      0 #> 21   -0.674709398  54.54141      0 #> 22    0.102263329  82.84079      0 #> 23   -0.535310689  59.74479      0 #> 24   -0.785382727  71.66984      1 #> 25   -1.020616735  53.43276      0 #> 26   -0.980264669  67.95074      0 #> 27   -1.139952951  90.94129      1 #> 28    2.142499705  53.90560      1 #> 29   -0.359535156  58.06960      0 #> 30   -0.542890729  61.52238      0 #> 31   -0.377144562  74.29324      0 #> 32   -1.284839781  65.92918      0 #> 33   -0.465969124  50.48939      0 #> 34   -1.555603848  51.65071      0 #> 35    0.047953107  79.04107      1 #> 36   -1.514678637  76.41289      0 #> 37   -0.042628777  72.68510      0 #> 38    0.237290499  80.76128      1 #> 39   -2.259532440  78.66616      0 #> 40   -1.572276285 100.84162      0 #> 41   -0.337362522  56.11062      1 #> 42   -0.317067923  97.77963      0 #> 43    0.346708710  78.25313      0 #> 44    0.126916336  83.48689      1 #> 45   -1.055373589  70.04248      0 #> 46    0.803846025  79.57463      0 #> 47    0.055450388  56.96682      1 #> 48   -1.137919475  79.92165      0 #> 49   -0.549574830  72.77628      1 #> 50   -0.530984683  61.61769      1 #> 51    0.457877831  70.70218      1 #> 52   -0.011062385  48.86995      0 #> 53    1.814331684  81.66507      1 #> 54    1.404157252  78.98492      1 #> 55   -0.955223900  89.29967      0 #> 56   -0.231415655  76.74694      0 #> 57    0.210356722  59.06602      0 #> 58   -0.766358198  80.94333      0 #> 59   -0.012273889  44.08761      0 #> 60   -0.187951878  46.08646      1 #> 61    0.719158917  85.45308      0 #> 62   -0.870435317  83.55154      0 #> 63   -1.319141554  84.90412      0 #> 64   -0.008734207  93.88679      0 #> 65   -0.037567850  57.25208      1 #> 66    0.233708221  52.86216      1 #> 67   -2.239349643  78.54889      0 #> 68   -0.381122893  77.38784      1 #> 69    1.219098213  64.04665      1 #> 70    0.430856901  79.40869      1 #> 71    0.387511877  63.40187      0 #> 72   -1.059753214  62.01247      0 #> 73   -0.830516424  85.10627      0 #> 74   -0.911122364  69.28749      0 #> 75    0.770402945  76.79349      0 #> 76    2.093139803  65.42559      1 #> 77   -0.590956251  73.02861      1 #> 78   -1.543473517 100.52025      0 #> 79    0.316157545  65.02945      0 #> 80   -0.504797457  74.74522      1 #> 81    0.503846436  79.00916      0 #> 82   -1.361541694  94.00610      0 #> 83    0.710018570  47.66784      0 #> 84    1.324201256  79.36168      0 #> 85   -0.327255378  91.39115      0 #> 86    1.732295253  60.09115      1 #> 87   -1.366205252  68.96356      1 #> 88    0.927879879  68.91178      0 #> 89   -1.351322666  63.03012      0 #> 90   -0.128917974  82.06257      1 #> 91   -0.517159643  75.53772      1 #> 92   -0.616591545  88.74191      0 #> 93   -1.380349347  60.22061      0 #> 94    0.578275353  62.11967      1 #> 95    1.787347859  69.71739      1 #> 96   -0.179814095  64.08682      0 #> 97   -0.095379641  78.85435      1 #> 98    0.469812512  76.59026      0 #> 99    1.775899342  63.70347      0 #> 100  -1.126604446  65.06707      0 #> 101  -0.729958666  82.65558      0 #> 102  -1.600289788  57.57819      0 #> 103  -1.094797857  80.32318      0 #> 104  -1.435857234  62.16747      0 #> 105   0.133107911  61.97798      1 #> 106  -0.857989257  74.43290      0 #> 107   0.037160038  85.98450      0 #> 108   0.557414645  92.80908      0 #> 109   2.984809094  73.00661      1 #> 110   1.149390890  49.45775      0 #> 111  -1.762582459  70.72566      0 #> 112   0.032919710  75.36064      0 #> 113  -0.162806180  99.21163      0 #> 114  -1.222378760  85.11516      0 #> 115  -0.401035336  63.36023      0 #> 116   0.665661945  59.75012      0 #> 117   0.306819952  65.52780      1 #> 118  -0.182128251  82.74695      1 #> 119  -0.404800479  63.99411      0 #> 120   0.613676510  44.66923      1 #> 121  -1.062343808  53.87023      0 #> 122  -0.850677978  65.39479      0 #> 123   1.061624413  53.63623      1 #> 124  -0.885976831  79.55762      0 #> 125  -0.131014699  69.78421      0 #> 126   1.527237387  61.59074      1 #> 127  -0.712994568  77.81009      0 #> 128  -0.743410462  56.50548      0 #> 129   1.913495414  76.62671      0 #> 130  -0.843728910  78.77505      1 #> 131   0.274813181  60.56495      0 #> 132  -0.413092268  94.64868      0 #> 133  -1.226115217  76.80964      0 #> 134   0.268674591  67.06654      1 #> 135  -1.125217198  80.39015      0 #> 136  -0.828521989  71.45351      0 #> 137  -2.012933272  76.68345      1 #> 138   0.530834890  86.93653      0 #> 139  -1.002802416  65.20597      0 #> 140  -0.418609143  82.45835      0 #> 141   1.162173107  58.69360      0 #> 142  -0.193420747  65.54371      0 #> 143  -0.192421680  75.45931      0 #> 144  -1.511628212  79.29988      0 #> 145  -0.042078151  57.09431      0 #> 146   1.421759013  44.96247      0 #> 147  -0.668167322  78.57335      1 #> 148   0.406260094  90.59101      1 #> 149   0.615603059  77.67909      0 #> 150  -1.465559138  75.47011      0 #> 151  -1.068732012  57.24809      0 #> 152   0.462322244  66.36194      0 #> 153  -0.200219890  50.46768      0 #> 154   0.078025227  76.57148      0 #> 155  -0.456576631  48.58814      0 #> 156  -0.977639929  58.61753      0 #> 157   0.498721617  57.69601      1 #> 158   0.566914574  47.25760      0 #> 159   0.591727744  57.45214      0 #> 160  -0.754439769  82.25983      0 #> 161  -0.769644756  82.32946      0 #> 162   0.039644523  68.90614      0 #> 163  -0.246375233  83.03127      0 #> 164  -0.090855032  62.14178      1 #> 165  -0.155187188  82.46282      0 #> 166  -0.632866358  57.20088      0 #> 167  -0.158328859  68.39341      1 #> 168   0.659895080  72.11084      0 #> 169   0.647172928  60.98542      1 #> 170   0.195080981  81.84103      1 #> 171   1.355559703  70.87986      1 #> 172   1.067976823  55.21342      1 #> 173  -0.074987680  77.65390      0 #> 174  -0.963563398  80.20085      0 #> 175  -0.161298317  51.46605      0 #> 176   0.474807404  87.31798      1 #> 177  -0.295262942  80.39250      0 #> 178   1.285388123  76.07449      1 #> 179   0.930053016  59.36747      0 #> 180   0.993504242  75.13011      1 #> 181  -1.227726582  81.13911      1 #> 182   0.954402893  62.12325      0 #> 183   0.435037526  75.27693      0 #> 184   1.466608690  47.99964      1 #> 185   0.506434815  74.07437      0 #> 186  -0.530096672  53.62479      0 #> 187   1.380718245  71.50441      1 #> 188   0.799709080  70.06737      0 #> 189   0.059594794  72.46185      0 #> 190  -1.259121346  77.97776      0 #> 191   0.321858868  80.94764      1 #> 192   0.991341900  60.34931      1 #> 193  -0.952804154  76.45620      1 #> 194  -0.017487692  73.59295      1 #> 195  -0.789375705  79.04672      0 #> 196   1.695448528  74.68921      1 #> 197   2.782152287  78.56591      1 #> 198  -0.054681181  93.38415      1 #> 199   0.188332754  60.65600      1 #> 200   0.153953896  75.33521      1 #> 201  -0.484652205  61.51197      1 #> 202   1.956233623  73.65941      0 #> 203  -1.731148633  71.60756      0 #> 204   1.169330273  84.22354      0 #> 205   0.877890485  59.37304      1 #> 206   0.180365449  48.97844      0 #> 207   1.689549720  82.05559      0 #> 208  -1.123447718  85.16264      0 #> 209  -0.940948974  52.41077      0 #> 210  -0.442141829  70.06546      0 #> 211   0.839933553  52.79239      1 #> 212   0.947830853  67.84775      1 #> 213  -1.123321320  62.04098      1 #> 214   0.006229679  50.96866      1 #> 215  -1.155763488  68.17006      0 #> 216   2.053187050  67.35865      1 #> 217   1.015879603  53.88770      0 #> 218  -0.361962240  78.16804      1 #> 219   1.507313211  55.70790      1 #> 220  -0.099496585  72.47083      1 #> 221  -0.416545135 103.37316      0 #> 222  -0.039366920  76.49616      1 #> 223  -0.986579068  78.04058      0 #> 224   1.716244510  74.34800      1 #> 225  -1.365443970  82.35623      0 #> 226   1.132748129  49.12122      0 #> 227  -0.554712241  63.10511      0 #> 228   0.232089126  55.65655      0 #> 229   0.435154630  71.53865      0 #> 230   0.249228467  50.36144      1 #> 231   0.271111882  76.94253      0 #> 232   1.019947744  56.58261      1 #> 233   0.242617819 105.23122      1 #> 234  -0.471502658  73.14774      0 #> 235  -1.067687196  72.78414      0 #> 236   2.324421191  79.70144      0 #> 237  -0.313374555  60.16064      0 #> 238   0.321145506  73.86647      1 #> 239   1.489253381  43.18266      0 #> 240  -1.716393887  43.64664      0 #> 241   0.556306838  65.44501      1 #> 242  -1.837739617  79.14562      0 #> 243  -1.602001615  80.59089      0 #> 244   1.565894137  84.23650      1 #> 245  -0.029914666  76.90374      0 #> 246  -0.314894333  83.18121      0 #> 247  -1.061531388  94.79376      0 #> 248  -1.649077286  85.51263      0 #> 249   2.436207455  74.49935      0 #> 250   0.500785423  55.03762      0 #> 251  -0.403989575  73.26203      0 #> 252   0.461619347  68.53520      1 #> 253   0.322225096  65.73335      0 #> 254  -2.460932535  76.79507      1 #> 255   1.721619402  61.80315      0 #> 256   1.100332457  74.96164      0 #> 257  -4.151039628  88.18952      0 #> 258  -0.887857974  53.01294      0 #> 259  -1.632356894  78.25501      1 #> 260   0.032979177  63.81088      1 #> 261  -1.539723906  48.72440      0 #> 262  -1.702660804  77.92043      0 #> 263  -1.958978927  68.75618      0 #> 264  -0.167365995  65.77953      0 #> 265  -0.541780825  63.52206      0 #> 266   0.637310706  50.69719      0 #> 267  -0.782693964  75.05675      0 #> 268  -0.243746181  76.26825      0 #> 269   0.896409557  63.42063      1 #> 270   0.487921709  53.54660      1 #> 271  -0.830230715  56.31156      0 #> 272  -0.263512475  69.44648      1 #> 273   1.965297311  48.58741      1 #> 274   0.329101724  50.27280      0 #> 275   0.542519025  48.28345      1 #> 276  -0.798653713  91.70793      1 #> 277  -0.831044836  66.93810      0 #> 278   0.779288826  70.98802      1 #> 279   1.630637631  67.27193      1 #> 280  -1.324643065  69.05961      0 #> 281  -1.848075320  49.22601      0 #> 282  -0.542651311  58.77731      0 #> 283   0.256304541  62.95448      1 #> 284   0.634925400  92.82853      0 #> 285  -0.447237600  76.19273      0 #> 286   1.587564947  76.04073      1 #> 287   0.220950094  73.91954      0 #> 288   0.374678344  76.31794      1 #> 289  -0.526055288  55.35735      0 #> 290   0.045006450  79.81001      1 #> 291  -0.114301397  73.57589      0 #> 292   1.648795711  60.16590      1 #> 293  -1.007067425  76.03575      0 #> 294  -1.165529882  90.05247      0 #> 295   3.350826044  55.61719      1 #> 296   0.984175980  65.21508      1 #> 297  -0.857496426  67.70132      1 #> 298  -0.947781137  57.26066      0 #> 299  -0.373692777  67.72337      0 #> 300   2.162324056  65.84116      1 #> 301  -0.797892305  71.26347      0 #> 302   1.308264455  48.99538      0 #> 303  -0.055985989  79.21212      0 #> 304   0.550587243  57.99104      0 #> 305  -0.750412691  54.59215      1 #> 306   0.576407173  70.36004      0 #> 307   0.241819580  67.11729      1 #> 308   0.315138056  60.09061      0 #> 309   0.970004746  66.43415      1 #> 310  -0.699655675  79.98062      1 #> 311  -0.896903755  81.96711      0 #> 312  -0.072272106  98.24418      0 #> 313  -0.890139132  67.02799      0 #> 314  -1.024425616  59.75699      0 #> 315   0.002850001  83.65484      0 #> 316  -1.042031161  87.86203      0 #> 317  -0.100544019  70.95703      0 #> 318  -1.302519587  76.74440      0 #> 319  -0.147467524  78.66019      0 #> 320  -0.569927044  95.27005      0 #> 321   0.194641161  52.87104      1 #> 322   0.037308833  79.51855      1 #> 323  -0.953676137  63.33611      1 #> 324  -0.452505487  90.98494      1 #> 325  -0.875942418  92.20985      0 #> 326   0.028194718 100.22163      0 #> 327   1.053087025  62.93850      1 #> 328  -0.596312103  58.49853      0 #> 329  -0.334856428  82.54660      1 #> 330  -0.333705953  85.48174      0 #> 331   2.314977839  56.95819      1 #> 332  -1.700391696  61.10485      0 #> 333  -1.382958128  42.92288      0 #> 334  -0.185463710  53.28548      0 #> 335  -0.151079861  73.44796      0 #> 336   0.115098227  64.03618      1 #> 337  -0.499754590  63.41182      0 #> 338   0.033140581  65.07421      0 #> 339   1.140875659  79.10615      1 #> 340  -0.313746394  46.88836      0 #> 341  -0.677753542  75.50692      0 #> 342  -0.363271430  75.20179      0 #> 343   1.594392196  49.15138      1 #> 344   2.971870156  44.30748      0 #> 345  -1.123969872  58.11683      0 #> 346  -0.152856761  56.78641      0 #> 347  -2.206727399  79.39626      1 #> 348  -0.162708337  69.42944      0 #> 349  -0.321966658  59.19390      0 #> 350   0.977811677  89.99768      1 #> 351  -1.872099131  80.55802      1 #> 352  -0.024809691  78.17779      0 #> 353  -0.299119855  63.67917      0 #> 354  -0.698002669  71.78086      0 #> 355  -1.230695022  80.27467      0 #> 356  -0.468932531  79.42759      0 #> 357  -0.353885140  63.08649      1 #> 358  -0.044637760  89.01479      0 #> 359   0.824349604  73.20448      1 #> 360  -1.287085953  92.67578      0 #> 361  -0.273248194  95.80298      0 #> 362   0.052711427  78.26148      1 #> 363  -0.720306263  43.53562      0 #> 364   0.586860574  73.57959      0 #> 365   1.895718722  57.78015      1 #> 366  -0.169449673  48.46811      0 #> 367   0.156591516  81.38410      0 #> 368  -2.142614508  87.68792      0 #> 369   0.686531894  66.62671      0 #> 370  -1.685125432  85.45052      0 #> 371  -1.533604026  79.85190      1 #> 372  -0.053851648  84.08569      1 #> 373   0.212628808  93.83022      0 #> 374   1.469244705  82.50769      1 #> 375  -0.231695237  85.17154      0 #> 376  -0.628991310  66.68868      0 #> 377  -1.269027135  69.20533      0 #> 378  -0.459988096  82.32939      0 #> 379   0.624660582  72.39171      0 #> 380  -1.197870433  94.10845      0 #> 381  -0.831357117  60.35914      0 #> 382  -0.577880485  91.89609      0 #> 383  -0.133583846  58.91741      0 #> 384  -0.150535657  58.32205      1 #> 385   0.578598607  95.48841      1 #> 386  -1.169511024  70.64296      0 #> 387  -0.183223341  75.30779      0 #> 388  -0.375883172  61.80226      0 #> 389  -0.011226668  69.17783      0 #> 390  -0.338883769  65.15385      0 #> 391  -0.056550129  83.17843      1 #> 392   0.798864725  78.92535      1 #> 393   0.848963255  42.95933      1 #> 394  -1.181078938  69.24964      0 #> 395  -0.793803319  94.42755      0 #> 396   1.857297809  60.82206      1 #> 397  -0.652324037  97.59329      0 #> 398   3.597731512  52.23101      1 #> 399  -0.211901383  71.25337      0 #> 400   0.695659591  52.98563      1 #> 401   0.688905381  63.51336      0 #> 402  -0.001842876  73.58222      0 #> 403  -1.291476761  82.45604      1 #> 404   1.560940357  62.86217      1 #> 405  -0.286020577  64.52501      0 #> 406  -1.932575411  52.95226      0 #> 407  -0.757057193  65.65486      0 #> 408   1.277465553  88.36466      1 #> 409   0.898151868  49.23382      1 #> 410   0.473609920  84.59805      1 #> 411   0.319500835  90.38820      1 #> 412   0.589582259  66.14253      0 #> 413   0.297239714  74.61761      1 #> 414  -0.140897422  44.51898      1 #> 415   0.666684957  45.21885      1 #> 416  -0.493553261  49.60338      1 #> 417  -2.283521173  69.67025      0 #> 418   0.382222176  49.47992      1 #> 419  -0.447172535  75.08584      0 #> 420   0.184972759  64.63902      1 #> 421  -1.367964094  70.09902      0 #> 422   0.017391051  79.00636      0 #> 423  -0.136786281  97.92018      1 #> 424   0.324144005  93.74817      1 #> 425   1.783536581  71.79931      1 #> 426  -0.617793157  64.16442      0 #> 427   0.339189505  50.53752      1 #> 428   0.659794375  74.12394      0 #> 429  -0.984810341  79.43918      0 #> 430  -1.178162710  86.85433      0 #> 431   1.315085508  53.06688      1 #> 432   0.534186762  64.71900      0 #> 433   0.945236225  70.27180      0 #> 434   0.406677410  85.45424      0 #> 435   1.558879059  52.13489      1 #> 436  -0.366902236  84.24454      0 #> 437  -0.449762186  72.05179      1 #> 438   2.139609903  60.65670      1 #> 439   0.106978163  88.10917      0 #> 440   0.384911211  71.71846      0 #> 441   0.837476334  80.92788      1 #> 442   1.133236592  79.52874      1 #> 443  -0.556796094 101.32358      0 #> 444   0.259290484  63.02356      0 #> 445   1.774425315  56.20089      1 #> 446   0.601474472  42.54199      1 #> 447   0.111206795  53.88855      1 #> 448  -0.489059088  77.59915      0 #> 449   0.271496067  78.05347      1 #> 450   0.044183058  83.48676      1 #> 451   0.257917715  48.73870      0 #> 452   0.452817472  87.88400      1 #> 453   1.172764209  56.11307      1 #> 454  -0.957533733  67.33667      0 #> 455   0.291803181  55.55947      1 #> 456  -0.775026313  81.56488      0 #> 457   0.231679664  78.40724      1 #> 458   0.174219902  68.36892      1 #> 459  -0.028417367  51.70824      1 #> 460   0.642497916  83.42495      0 #> 461  -0.968377331  66.64217      1 #> 462  -0.053721929  58.35978      1 #> 463   0.336372435  60.29826      0 #> 464  -1.436630113  65.72071      1 #> 465  -0.419095211  46.39359      0 #> 466   0.263409463  71.20675      0 #> 467   0.293039635  69.37828      0 #> 468  -0.660216218  76.19730      1 #> 469  -0.448239680  92.13589      0 #> 470   0.211814669  80.57219      0 #> 471   0.316495802  83.64683      1 #> 472   0.321780402  76.53336      1 #> 473  -0.597433943  97.34913      0 #> 474  -1.046592720  67.11882      1 #> 475  -0.302893686  76.21491      0 #> 476  -0.125326529  81.31118      0 #> 477   0.653999096  71.08122      0 #> 478   0.385945152  76.97315      1 #> 479  -1.462860032  59.76545      0 #> 480  -1.370177228  87.45044      0 #> 481   2.220464677  62.23587      1 #> 482  -0.107025134  69.34974      0 #> 483   1.108813597  71.26913      1 #> 484   0.141924927  74.07853      0 #> 485   0.136728188  74.98143      1 #> 486  -1.272681136  73.09840      0 #> 487   0.357185492  64.43738      0 #> 488  -0.633765891  69.88316      0 #> 489   0.345230791  69.82302      1 #> 490   1.077440115  46.53201      0 #> 491   0.562699071  71.15780      1 #> 492  -0.735173725  73.17211      0 #> 493  -0.737127612  82.14181      0 #> 494  -0.581754103  82.12442      0 #> 495   0.686942384  75.43861      1 #> 496  -1.401442414  81.12567      0 #> 497   0.984041241  76.69756      1 #> 498   2.087576662  82.24599      0 #> 499   0.389812103  52.37876      1 #> 500  -1.357968067  83.29820      0 #> 501   0.743489365  75.16081      1 #> 502  -0.532316853  58.32153      0 #> 503   0.757779969  65.44420      0 #> 504   0.153677910  86.26048      1 #> 505  -0.766726410  61.50999      0 #> 506  -0.486374934  76.16607      0 #> 507  -0.379686410  74.85497      0 #> 508   0.019996188  80.55193      0 #> 509  -1.760302597  99.70560      0 #> 510  -0.141574737  67.62883      0 #> 511  -0.795023945  68.93405      0 #> 512   0.583156836  69.55691      0 #> 513  -2.305786361 101.80887      0 #> 514   1.150610217  80.05043      0 #> 515   0.433907769  63.04381      0 #> 516  -0.596852852  84.33615      0 #> 517   0.193705612  51.99165      1 #> 518  -1.523084966  86.11431      0 #> 519  -2.203123049  82.56582      0 #> 520   1.138586576  72.42691      1 #> 521  -0.289010441  66.18583      1 #> 522  -0.148038406  78.65869      0 #> 523  -0.454919651  81.17995      0 #> 524   0.082422667  78.51968      0 #> 525   1.229409478  71.31722      0 #> 526  -0.752722275 101.95222      1 #> 527  -0.473912052  58.38317      0 #> 528  -2.592222837  55.80022      0 #> 529   1.592088882  49.75255      1 #> 530  -0.635317150 102.32923      0 #> 531   0.854056679  71.32751      1 #> 532   1.700553547  48.87225      1 #> 533  -0.192155766  80.57736      0 #> 534   1.793098196  56.04277      0 #> 535   1.288309952  51.08780      1 #> 536  -0.889770240  60.29291      0 #> 537   0.310790054  60.20777      0 #> 538   0.815193911  75.18028      0 #> 539   0.916769119  73.76192      0 #> 540  -2.008576197  83.36471      0 #> 541   1.089222488  86.51305      0 #> 542  -0.195120258  78.54869      0 #> 543   0.498102737  72.64138      0 #> 544  -0.236644448  52.66732      0 #> 545  -0.896881048  57.22926      0 #> 546  -0.463427793  54.87271      0 #> 547   0.713607387  57.08715      0 #> 548  -1.199755288  62.87822      0 #> 549  -0.358617055  65.62116      0 #> 550  -1.329883284  76.89183      1 #> 551  -0.617129726  73.65036      0 #> 552   1.140302995  58.42500      0 #> 553  -1.294952403  83.53646      0 #> 554  -0.318839896  66.37466      0 #> 555   1.222210566  86.27515      0 #> 556   1.634400208  73.08017      1 #> 557   1.917382635  61.78367      1 #> 558  -0.502954884  48.09052      0 #> 559  -1.146905228  71.44932      0 #> 560   0.825302238  64.63304      0 #> 561  -0.954297641  52.77611      1 #> 562  -1.961922720  85.32847      0 #> 563  -0.926327419  77.82472      1 #> 564  -0.885967504  45.64096      0 #> 565   0.411250104  59.72217      0 #> 566   0.048383840  72.61415      1 #> 567   0.873952265  75.73982      1 #> 568  -0.706691993  41.29882      0 #> 569  -0.324308371  68.16377      1 #> 570   0.914147187  77.66212      1 #> 571  -0.143014606  52.57632      1 #> 572   0.980157607  60.95608      0 #> 573   2.672705262  66.75834      1 #> 574   0.121283704  66.31767      0 #> 575  -0.004079530  44.94464      0 #> 576  -0.155864114  77.39439      1 #> 577  -1.135743905  70.08727      0 #> 578  -0.883074019  57.62239      0 #> 579  -0.370215037  81.14130      0 #> 580  -0.307226946  85.76635      0 #> 581  -0.194675624  64.19951      0 #> 582  -2.855504473  71.71160      0 #> 583   0.052621848  57.14012      0 #> 584   1.005450122  54.11482      1 #> 585  -0.052455156  72.44667      0 #> 586   1.457864099  57.44125      1 #> 587  -1.235835358  80.41352      0 #> 588  -0.791325745  63.10402      0 #> 589   0.164941032  86.59070      0 #> 590   0.991598645  78.12414      0 #> 591  -1.383735349  65.01331      0 #> 592   0.052979010  63.69091      1 #> 593  -0.217603959  69.62860      1 #> 594  -0.522189316  84.95166      1 #> 595  -0.658691014  96.61603      0 #> 596  -0.535903176  74.94797      0 #> 597   2.013777746  59.17006      1 #> 598   2.549542282  73.77711      1 #> 599  -0.042900282  59.23258      0 #> 600  -0.210774297  70.92249      0 #> 601   1.548246406  76.42063      1 #> 602   0.139742242  56.49874      0 #> 603  -0.849293166  62.30473      0 #> 604  -1.516497672  78.41835      0 #> 605  -0.506498519  85.75844      0 #> 606   0.717721755  67.29722      0 #> 607   1.272541214  69.11526      1 #> 608  -0.328038505  54.17310      0 #> 609  -0.300500264  82.32133      0 #> 610   0.241988985  68.09092      0 #> 611   0.599140478  56.74698      0 #> 612   0.233621343  58.00850      0 #> 613  -0.572341669  72.74709      1 #> 614  -2.374046689  48.21010      0 #> 615  -0.295807532  58.42702      1 #> 616  -0.790642829  81.01955      0 #> 617  -0.572565171  47.18633      0 #> 618  -1.066968320  74.05472      0 #> 619  -2.648059858  47.17180      0 #> 620   0.297884323  71.04479      1 #> 621  -1.342923161  80.07355      0 #> 622   2.810078541  81.77515      0 #> 623  -1.550125368  93.48449      0 #> 624   1.998412572  51.75902      1 #> 625  -1.663218356  83.61605      0 #> 626   1.190566867  78.73358      1 #> 627  -1.203284244  95.04392      0 #> 628  -1.147420108  79.79124      0 #> 629   0.981763751  71.47835      1 #> 630   1.515936643  60.55515      0 #> 631  -1.176207969  91.78371      0 #> 632  -0.824376921  79.92445      1 #> 633  -0.483294422  56.44230      0 #> 634   0.368206141  51.00890      0 #> 635  -0.914810937  71.93843      0 #> 636  -0.782852343  83.42547      0 #> 637  -0.371541916  83.35285      0 #> 638   1.445582429  74.95892      1 #> 639   0.311670371  50.02153      0 #> 640   1.179060163  56.67973      1 #> 641   0.301324143  76.24572      0 #> 642   0.070519276  78.25412      1 #> 643  -0.118458234  74.43461      0 #> 644  -0.333050729  67.40416      0 #> 645   0.752750280  55.98871      0 #> 646  -0.118879162  57.17796      0 #> 647  -0.252946590  86.91621      1 #> 648   1.213626902  73.82562      1 #> 649   1.689652691  74.91069      1 #> 650  -1.309703498  59.20940      1 #> 651  -1.018829452  53.10585      0 #> 652  -1.591572052  68.80731      0 #> 653  -1.878053355  52.54817      0 #> 654  -0.936913088  98.88401      0 #> 655  -0.034210968  65.20965      0 #> 656   2.602662749  47.04070      1 #> 657   0.790068180  83.62042      1 #> 658   0.945874540  72.37229      0 #> 659   0.894300097  81.68435      0 #> 660   0.579450121  83.38210      1 #> 661   0.614469804  61.79263      1 #> 662  -0.732764842  64.93971      0 #> 663   1.135208480  89.76738      0 #> 664  -0.342993506  77.17406      0 #> 665   0.733383220  49.33972      1 #> 666   0.795955277  54.21442      0 #> 667  -1.549774256  89.96387      1 #> 668  -0.823387790  69.38323      0 #> 669  -1.458428415  55.74609      0 #> 670   0.292869160  83.68836      1 #> 671  -0.490624755  56.82229      0 #> 672  -0.934147366  97.51192      0 #> 673  -0.615825222  86.13770      1 #> 674   1.406102909  67.54377      0 #> 675   0.988859743  55.35405      1 #> 676  -0.084227478  77.84511      0 #> 677   0.150048522  85.30181      0 #> 678  -1.917524779  67.92948      0 #> 679  -0.847958971  81.34681      0 #> 680   0.866653579  81.96146      1 #> 681  -1.521088299  79.62522      0 #> 682  -0.291412083  76.62820      0 #> 683   0.435922692  53.93210      0 #> 684  -0.582699773  65.90094      1 #> 685   1.344636681  73.22954      0 #> 686  -2.041660181  84.57439      1 #> 687  -2.355230298  64.44380      0 #> 688   0.743238795  67.04864      1 #> 689  -1.631604521  83.75449      0 #> 690   0.607321189  72.88151      0 #> 691   0.365877104  75.73841      0 #> 692  -0.529973692  87.78997      0 #> 693  -1.765685570  78.32814      0 #> 694  -0.774845714  71.90564      1 #> 695   0.554007102  53.14996      0 #> 696   2.059048493  52.01547      1 #> 697   0.518416961  57.56170      1 #> 698   1.507698032  68.30999      1 #> 699  -0.323392757  71.30717      0 #> 700  -0.153448407  79.89670      1 #> 701   1.508815755  59.89389      1 #> 702  -1.406828238  84.09145      0 #> 703  -2.098680689  80.11396      0 #> 704   0.472659161  50.19998      0 #> 705  -0.554396677  56.61078      0 #> 706   0.024098278  78.29241      0 #> 707   0.183964175  80.61693      1 #> 708  -0.450099428  81.38425      1 #> 709  -0.905897579  85.18455      0 #> 710  -0.293311450  70.46658      0 #> 711   0.939501759  69.54094      1 #> 712   0.969867299  62.90876      0 #> 713   0.006166679  54.37710      0 #> 714  -1.106559285  77.91797      0 #> 715  -0.981082762  52.52372      0 #> 716   2.241051990  68.79793      1 #> 717   1.291864343  71.29577      1 #> 718  -0.163893180  51.48747      1 #> 719  -0.707436335  67.98486      1 #> 720   0.022422436  66.69469      0 #> 721   1.346232403  64.45237      1 #> 722  -1.655053955 100.49402      0 #> 723  -1.718621613  80.13385      1 #> 724  -0.106894451  65.35218      0 #> 725  -0.058330492  43.10819      0 #> 726  -1.482854063  83.53691      0 #> 727   0.106771660  80.32297      0 #> 728   0.191954399  87.70549      1 #> 729   0.931195608  52.80606      1 #> 730   1.445163821  64.82346      1 #> 731  -0.031112447  77.62594      0 #> 732   1.221307840  82.18370      1 #> 733   0.715957892  46.43663      1 #> 734   0.895886155  79.39866      1 #> 735  -1.483931543  51.45403      0 #> 736  -1.189937677  82.06182      1 #> 737  -0.285605136  75.19457      0 #> 738   0.596883070  94.42016      0 #> 739   0.470925494  55.96350      0 #> 740   0.613352399  82.86933      1 #> 741  -1.973997202  90.82834      0 #> 742   1.397714608  75.28442      1 #> 743   0.351234619  72.65655      1 #> 744  -0.897575085  65.75578      0 #> 745   0.888021156  79.60610      1 #> 746   0.260596278  60.13458      1 #> 747   0.189793453  71.48718      0 #> 748   1.078527190  80.31140      0 #> 749  -0.598645492  73.20255      0 #> 750  -1.211944623  48.52730      0 #> 751  -1.381306498  64.10785      0 #> 752  -0.097937469  78.98204      1 #> 753  -0.978688447  63.72068      1 #> 754  -0.518884106  53.81813      0 #> 755  -0.224270234  47.62344      0 #> 756  -1.379183109  55.39758      1 #> 757   1.154620504  70.65725      1 #> 758  -0.143605984  76.66276      1 #> 759  -0.155884885  74.93618      0 #> 760   1.633075470  82.61355      1 #> 761  -0.425468926  82.88653      0 #> 762   0.893490790  84.80309      1 #> 763  -0.731668833  67.01486      0 #> 764   1.641055228  55.84994      1 #> 765   1.107920473  58.50471      0 #> 766  -1.305041749  66.61057      0 #> 767  -1.277198715  79.98131      0 #> 768   1.876108334  56.84940      1 #> 769   1.258709538  51.28998      1 #> 770  -0.910263756  74.65312      0 #> 771   1.017308653  76.57995      1 #> 772   0.237816411  75.42030      1 #> 773   1.836718200  80.77447      1 #> 774  -1.970187247  78.24502      0 #> 775  -2.182931953  58.28600      0 #> 776   0.633312013  65.77928      0 #> 777   0.003494925  66.42365      0 #> 778  -0.283641332  56.36908      1 #> 779  -0.526001044  65.23795      0 #> 780  -0.821105443  64.14529      0 #> 781  -0.774667319  54.09581      1 #> 782   2.627189997  64.86642      1 #> 783   0.201717027  73.33436      0 #> 784  -0.651370170  73.77358      0 #> 785   0.988333964  84.03229      0 #> 786  -0.698939862 103.14281      0 #> 787  -1.623192099  70.75469      0 #> 788  -0.313189456  54.02633      0 #> 789  -0.723867860  51.53218      0 #> 790  -0.303239693  77.43892      1 #> 791   1.476626753  70.27217      1 #> 792   1.587539377  74.39702      1 #> 793  -0.445111491  58.37012      0 #> 794  -0.185841050  68.51610      0 #> 795   0.430929647  61.57980      1 #> 796   0.630799300  55.54605      0 #> 797   1.896959760  68.65753      1 #> 798   1.824022666  63.01331      1 #> 799  -0.921333953  84.83331      0 #> 800   1.399810249  60.83344      0 #> 801   0.085067870  68.93191      0 #> 802   0.502719644  60.90249      0 #> 803   0.551130580  80.85309      1 #> 804   0.190046181  88.50828      1 #> 805   0.480009508  78.65675      0 #> 806  -1.740887380  44.88269      0 #> 807  -0.469534616  76.96472      0 #> 808   0.724436916  88.96603      1 #> 809   1.063941866  89.78736      0 #> 810  -1.792187958 102.31174      0 #> 811   0.573198547  76.16756      0 #> 812  -0.667531682  79.58967      0 #> 813   0.001508449  65.90271      0 #> 814  -0.371813946  68.88667      0 #> 815   0.065186436  71.45560      0 #> 816  -0.369147288  65.78222      0 #> 817   0.340901957 100.65582      1 #> 818   0.693919641  58.28107      1 #> 819   0.594203364  82.36012      1 #> 820  -0.325858840  71.17370      1 #> 821  -1.221694003  58.92815      0 #> 822  -0.274558553  81.01523      1 #> 823   0.906633255  72.73702      0 #> 824  -0.758782833  93.93600      0 #> 825  -0.155213790  53.65129      0 #> 826  -0.181221599  81.30535      0 #> 827  -1.246318994  77.63565      0 #> 828  -0.037801520  65.46073      0 #> 829   0.543508615  63.75165      1 #> 830  -0.607054623  64.90084      0 #> 831   1.069044811  62.72874      1 #> 832   0.320412661  64.97977      1 #> 833   0.593798186  77.70331      0 #> 834   1.940286685  67.70740      1 #> 835   1.978507152  65.14888      1 #> 836  -1.311626701  79.43031      0 #> 837   0.364241476  50.66021      0 #> 838  -0.576366084  71.53449      0 #> 839  -0.885723188  68.65599      1 #> 840  -0.003790158  71.21513      0 #> 841   1.235967350  70.29666      0 #> 842   0.488367708  69.54952      1 #> 843   0.209287136  52.14445      0 #> 844   0.660109630  46.50761      0 #> 845   0.896470662  49.22920      1 #> 846  -1.314126243  62.67597      0 #> 847  -0.574649474  61.46073      0 #> 848   1.511706657  50.65191      0 #> 849  -1.040864653  75.16165      0 #> 850  -0.321942208  54.22434      0 #> 851   0.087166729  64.97144      1 #> 852  -0.224588362  83.67297      0 #> 853  -0.003597122  58.18720      0 #> 854  -2.143300463 102.27803      0 #> 855  -0.036777033  75.74574      1 #> 856   1.675570733  81.76368      1 #> 857   1.080627834  79.36885      1 #> 858  -0.441725480  46.19695      0 #> 859   1.831370806  56.34261      1 #> 860   0.159801582  85.13792      0 #> 861  -0.272758985  63.02395      1 #> 862   2.096156306  48.14581      0 #> 863   1.957588987  69.93699      0 #> 864  -0.663466474  63.58823      1 #> 865  -1.419263202  76.11434      0 #> 866  -1.387594637  49.04654      0 #> 867   1.246575577  57.30795      0 #> 868   1.351589089  61.18727      1 #> 869  -1.187025279  77.47040      0 #> 870   0.778187546  65.88831      0 #> 871  -0.245750699  78.65707      0 #> 872   1.994029011  62.24503      1 #> 873   2.306924485  68.43893      1 #> 874  -0.136505657  80.11318      0 #> 875  -0.385217657  82.23189      0 #> 876  -0.749321017  66.02601      0 #> 877  -1.119356714  67.69749      0 #> 878  -0.665297883  65.11211      0 #> 879  -1.500487224  93.08544      0 #> 880  -1.067550049  53.10507      0 #> 881  -2.540621383  74.16746      0 #> 882  -0.617204464  61.70512      0 #> 883  -1.310654087  62.30101      1 #> 884   0.929631506  71.79070      0 #> 885   0.022876837  65.00701      0 #> 886   1.737209017  65.28135      1 #> 887   0.838551071  59.10876      1 #> 888  -0.680581630  84.76813      0 #> 889  -0.722598579  69.44297      0 #> 890  -0.577521473  68.04277      0 #> 891   0.327894791  79.60837      1 #> 892  -0.614680786  79.91634      0 #> 893   1.026717716  67.38635      1 #> 894   0.453039037  81.77482      1 #> 895   0.391324045  62.20514      0 #> 896  -0.539817251  75.91581      1 #> 897  -0.626550120  81.95791      0 #> 898   0.516380725  73.55825      0 #> 899   0.950326109  73.39941      1 #> 900  -0.442360131  87.35335      0 #> 901   1.152720153  50.48138      1 #> 902  -1.739549540  68.74122      0 #> 903  -0.860060922  56.23103      0 #> 904   0.475453094  87.82244      1 #> 905   1.407611959  71.02860      1 #> 906  -0.483300694  97.21327      0 #> 907  -0.475478117  63.90436      0 #> 908  -0.051597865  54.05634      0 #> 909  -0.464599433  83.85226      0 #> 910  -1.379141927  80.23024      0 #> 911  -1.367798555  80.59069      0 #> 912  -0.679402615  81.57441      0 #> 913  -1.400469302  78.68212      0 #> 914  -1.368268179  70.54441      0 #> 915   0.516685787  50.92280      0 #> 916   0.866821951  90.27723      0 #> 917   0.744786099  45.57245      0 #> 918   1.156393229  80.97788      1 #> 919  -0.645603818  65.59991      0 #> 920   0.181399129  78.33557      0 #> 921  -0.837994589  91.87918      0 #> 922   1.256201076  66.32478      0 #> 923   1.066744728  70.39474      1 #> 924  -0.871027270  51.39478      0 #> 925   0.902641716  65.37434      1 #> 926   2.261891271  76.72449      1 #> 927  -0.036175144 100.01520      1 #> 928   0.822492211  60.17973      1 #> 929   1.252651381  47.17131      0 #> 930   0.392367029  62.80954      0 #> 931  -0.020215391  66.62306      0 #> 932   0.407903823  57.63629      0 #> 933   0.866915561  50.68528      1 #> 934   1.226112336  88.90118      1 #> 935  -1.429368577  60.46763      0 #> 936  -1.139122895  66.72148      0 #> 937  -0.099946960  49.01674      0 #> 938   0.746118021  41.29399      0 #> 939   1.410092498  53.32297      1 #> 940   1.224139668  62.96483      1 #> 941   0.675372487  59.12345      1 #> 942   0.033167271  68.17917      1 #> 943   0.754747393  76.61368      0 #> 944   1.344782943  79.32738      1 #> 945  -0.904063546  54.04420      0 #> 946  -0.516188803  66.34856      0 #> 947   0.285135944  80.28279      1 #> 948   1.816716139  73.40387      1 #> 949  -0.399527287  73.01729      1 #> 950   2.458156636  68.74897      1 #> 951   0.801878081  78.96876      1 #> 952   0.025302688  57.95565      1 #> 953   0.211192074  76.18547      0 #> 954  -1.070482676  54.77220      1 #> 955   0.718997294  74.03872      1 #> 956   0.044793616  56.11653      0 #> 957   1.888823030  72.31112      1 #> 958   0.223014032  80.88283      0 #> 959  -2.134966955  87.35397      0 #> 960  -1.738850550  68.39920      1 #> 961   1.009933805  66.44489      1 #> 962   1.918806331  74.92604      1 #> 963   1.154366892  71.38801      1 #> 964   0.896261021  80.43333      1 #> 965   1.299320146  58.82191      1 #> 966   1.017758549  75.21492      0 #> 967  -0.534952772  88.64673      1 #> 968   0.136916077  87.11686      1 #> 969  -0.588113563  54.40290      1 #> 970  -1.282019851  78.53006      0 #> 971   1.341499502  72.70626      1 #> 972  -0.565241966  63.75503      0 #> 973   0.988757628  56.12094      0 #> 974   2.030672058  71.29855      1 #> 975   1.199215574  48.26757      1 #> 976   1.196849068  53.90547      1 #> 977   1.219231286  63.40219      0 #> 978  -0.920510018  77.38759      0 #> 979   0.368058950  65.83568      1 #> 980   1.104020022  79.43676      1 #> 981  -0.891381455  58.74807      1 #> 982  -0.152655204  75.18314      0 #> 983  -1.948904053  55.74003      0 #> 984  -0.466326289  64.71116      0 #> 985   1.262706842  51.53328      0 #> 986  -0.640132458  62.75510      0 #> 987   0.017924266  83.19413      1 #> 988   0.170316663  72.76499      0 #> 989   1.022522144  66.28157      0 #> 990   0.928033355  56.12469      0 #> 991   1.084490676  72.82183      0 #> 992   0.276159314  73.97476      0 #> 993   0.655371810  75.92638      0 #> 994  -0.061962169  42.98554      1 #> 995  -1.166530193  78.38446      0 #> 996   1.067369638  74.14575      1 #> 997   0.258438700  70.09591      0 #> 998   1.088892213  80.33859      1 #> 999  -1.010939709  71.47869      0 #> 1000  1.147795672  67.29726      1 #>  #> $bootstrap.iterations #> NULL #>  #> attr(,\"class\") #> [1] \"phsfit\"  # Data frame interface: fit_phs(test_data, age = \"age\", status = \"status\", phs = \"phs\") #> $model #> Call: #> survival::coxph(formula = formula, data = data) #>  #>        coef exp(coef) se(coef)     z      p #> phs 0.72135   2.05721  0.05065 14.24 <2e-16 #>  #> Likelihood ratio test=200.8  on 1 df, p=< 2.2e-16 #> n= 1000, number of events= 378  #>  #> $boot #> NULL #>  #> $formula #> survival::Surv(age, status) ~ phs #> <environment: 0x5574eb2958c0> #>  #> $data #>               phs       age status #> 1     0.842573540  67.95011      1 #> 2     1.115132087  56.31356      0 #> 3    -0.377745501  72.94103      1 #> 4     0.120151115  82.01571      1 #> 5    -0.404160156  74.33629      1 #> 6    -0.453188973  77.15814      1 #> 7     0.028489249  55.05799      0 #> 8     0.792950387  75.20764      0 #> 9     1.954165566  63.79295      0 #> 10    0.271294166  83.35571      1 #> 11    0.909511491  52.94639      0 #> 12   -0.771593777  73.79693      1 #> 13    0.073730272  75.36130      0 #> 14   -0.252881199  70.69446      0 #> 15   -0.328190509  91.81669      0 #> 16   -0.744533357  62.33691      0 #> 17    0.273766213  65.31057      0 #> 18    0.704915057  68.07979      1 #> 19    0.325803466  77.47581      0 #> 20    0.781495189  65.11660      0 #> 21   -0.674709398  54.54141      0 #> 22    0.102263329  82.84079      0 #> 23   -0.535310689  59.74479      0 #> 24   -0.785382727  71.66984      1 #> 25   -1.020616735  53.43276      0 #> 26   -0.980264669  67.95074      0 #> 27   -1.139952951  90.94129      1 #> 28    2.142499705  53.90560      1 #> 29   -0.359535156  58.06960      0 #> 30   -0.542890729  61.52238      0 #> 31   -0.377144562  74.29324      0 #> 32   -1.284839781  65.92918      0 #> 33   -0.465969124  50.48939      0 #> 34   -1.555603848  51.65071      0 #> 35    0.047953107  79.04107      1 #> 36   -1.514678637  76.41289      0 #> 37   -0.042628777  72.68510      0 #> 38    0.237290499  80.76128      1 #> 39   -2.259532440  78.66616      0 #> 40   -1.572276285 100.84162      0 #> 41   -0.337362522  56.11062      1 #> 42   -0.317067923  97.77963      0 #> 43    0.346708710  78.25313      0 #> 44    0.126916336  83.48689      1 #> 45   -1.055373589  70.04248      0 #> 46    0.803846025  79.57463      0 #> 47    0.055450388  56.96682      1 #> 48   -1.137919475  79.92165      0 #> 49   -0.549574830  72.77628      1 #> 50   -0.530984683  61.61769      1 #> 51    0.457877831  70.70218      1 #> 52   -0.011062385  48.86995      0 #> 53    1.814331684  81.66507      1 #> 54    1.404157252  78.98492      1 #> 55   -0.955223900  89.29967      0 #> 56   -0.231415655  76.74694      0 #> 57    0.210356722  59.06602      0 #> 58   -0.766358198  80.94333      0 #> 59   -0.012273889  44.08761      0 #> 60   -0.187951878  46.08646      1 #> 61    0.719158917  85.45308      0 #> 62   -0.870435317  83.55154      0 #> 63   -1.319141554  84.90412      0 #> 64   -0.008734207  93.88679      0 #> 65   -0.037567850  57.25208      1 #> 66    0.233708221  52.86216      1 #> 67   -2.239349643  78.54889      0 #> 68   -0.381122893  77.38784      1 #> 69    1.219098213  64.04665      1 #> 70    0.430856901  79.40869      1 #> 71    0.387511877  63.40187      0 #> 72   -1.059753214  62.01247      0 #> 73   -0.830516424  85.10627      0 #> 74   -0.911122364  69.28749      0 #> 75    0.770402945  76.79349      0 #> 76    2.093139803  65.42559      1 #> 77   -0.590956251  73.02861      1 #> 78   -1.543473517 100.52025      0 #> 79    0.316157545  65.02945      0 #> 80   -0.504797457  74.74522      1 #> 81    0.503846436  79.00916      0 #> 82   -1.361541694  94.00610      0 #> 83    0.710018570  47.66784      0 #> 84    1.324201256  79.36168      0 #> 85   -0.327255378  91.39115      0 #> 86    1.732295253  60.09115      1 #> 87   -1.366205252  68.96356      1 #> 88    0.927879879  68.91178      0 #> 89   -1.351322666  63.03012      0 #> 90   -0.128917974  82.06257      1 #> 91   -0.517159643  75.53772      1 #> 92   -0.616591545  88.74191      0 #> 93   -1.380349347  60.22061      0 #> 94    0.578275353  62.11967      1 #> 95    1.787347859  69.71739      1 #> 96   -0.179814095  64.08682      0 #> 97   -0.095379641  78.85435      1 #> 98    0.469812512  76.59026      0 #> 99    1.775899342  63.70347      0 #> 100  -1.126604446  65.06707      0 #> 101  -0.729958666  82.65558      0 #> 102  -1.600289788  57.57819      0 #> 103  -1.094797857  80.32318      0 #> 104  -1.435857234  62.16747      0 #> 105   0.133107911  61.97798      1 #> 106  -0.857989257  74.43290      0 #> 107   0.037160038  85.98450      0 #> 108   0.557414645  92.80908      0 #> 109   2.984809094  73.00661      1 #> 110   1.149390890  49.45775      0 #> 111  -1.762582459  70.72566      0 #> 112   0.032919710  75.36064      0 #> 113  -0.162806180  99.21163      0 #> 114  -1.222378760  85.11516      0 #> 115  -0.401035336  63.36023      0 #> 116   0.665661945  59.75012      0 #> 117   0.306819952  65.52780      1 #> 118  -0.182128251  82.74695      1 #> 119  -0.404800479  63.99411      0 #> 120   0.613676510  44.66923      1 #> 121  -1.062343808  53.87023      0 #> 122  -0.850677978  65.39479      0 #> 123   1.061624413  53.63623      1 #> 124  -0.885976831  79.55762      0 #> 125  -0.131014699  69.78421      0 #> 126   1.527237387  61.59074      1 #> 127  -0.712994568  77.81009      0 #> 128  -0.743410462  56.50548      0 #> 129   1.913495414  76.62671      0 #> 130  -0.843728910  78.77505      1 #> 131   0.274813181  60.56495      0 #> 132  -0.413092268  94.64868      0 #> 133  -1.226115217  76.80964      0 #> 134   0.268674591  67.06654      1 #> 135  -1.125217198  80.39015      0 #> 136  -0.828521989  71.45351      0 #> 137  -2.012933272  76.68345      1 #> 138   0.530834890  86.93653      0 #> 139  -1.002802416  65.20597      0 #> 140  -0.418609143  82.45835      0 #> 141   1.162173107  58.69360      0 #> 142  -0.193420747  65.54371      0 #> 143  -0.192421680  75.45931      0 #> 144  -1.511628212  79.29988      0 #> 145  -0.042078151  57.09431      0 #> 146   1.421759013  44.96247      0 #> 147  -0.668167322  78.57335      1 #> 148   0.406260094  90.59101      1 #> 149   0.615603059  77.67909      0 #> 150  -1.465559138  75.47011      0 #> 151  -1.068732012  57.24809      0 #> 152   0.462322244  66.36194      0 #> 153  -0.200219890  50.46768      0 #> 154   0.078025227  76.57148      0 #> 155  -0.456576631  48.58814      0 #> 156  -0.977639929  58.61753      0 #> 157   0.498721617  57.69601      1 #> 158   0.566914574  47.25760      0 #> 159   0.591727744  57.45214      0 #> 160  -0.754439769  82.25983      0 #> 161  -0.769644756  82.32946      0 #> 162   0.039644523  68.90614      0 #> 163  -0.246375233  83.03127      0 #> 164  -0.090855032  62.14178      1 #> 165  -0.155187188  82.46282      0 #> 166  -0.632866358  57.20088      0 #> 167  -0.158328859  68.39341      1 #> 168   0.659895080  72.11084      0 #> 169   0.647172928  60.98542      1 #> 170   0.195080981  81.84103      1 #> 171   1.355559703  70.87986      1 #> 172   1.067976823  55.21342      1 #> 173  -0.074987680  77.65390      0 #> 174  -0.963563398  80.20085      0 #> 175  -0.161298317  51.46605      0 #> 176   0.474807404  87.31798      1 #> 177  -0.295262942  80.39250      0 #> 178   1.285388123  76.07449      1 #> 179   0.930053016  59.36747      0 #> 180   0.993504242  75.13011      1 #> 181  -1.227726582  81.13911      1 #> 182   0.954402893  62.12325      0 #> 183   0.435037526  75.27693      0 #> 184   1.466608690  47.99964      1 #> 185   0.506434815  74.07437      0 #> 186  -0.530096672  53.62479      0 #> 187   1.380718245  71.50441      1 #> 188   0.799709080  70.06737      0 #> 189   0.059594794  72.46185      0 #> 190  -1.259121346  77.97776      0 #> 191   0.321858868  80.94764      1 #> 192   0.991341900  60.34931      1 #> 193  -0.952804154  76.45620      1 #> 194  -0.017487692  73.59295      1 #> 195  -0.789375705  79.04672      0 #> 196   1.695448528  74.68921      1 #> 197   2.782152287  78.56591      1 #> 198  -0.054681181  93.38415      1 #> 199   0.188332754  60.65600      1 #> 200   0.153953896  75.33521      1 #> 201  -0.484652205  61.51197      1 #> 202   1.956233623  73.65941      0 #> 203  -1.731148633  71.60756      0 #> 204   1.169330273  84.22354      0 #> 205   0.877890485  59.37304      1 #> 206   0.180365449  48.97844      0 #> 207   1.689549720  82.05559      0 #> 208  -1.123447718  85.16264      0 #> 209  -0.940948974  52.41077      0 #> 210  -0.442141829  70.06546      0 #> 211   0.839933553  52.79239      1 #> 212   0.947830853  67.84775      1 #> 213  -1.123321320  62.04098      1 #> 214   0.006229679  50.96866      1 #> 215  -1.155763488  68.17006      0 #> 216   2.053187050  67.35865      1 #> 217   1.015879603  53.88770      0 #> 218  -0.361962240  78.16804      1 #> 219   1.507313211  55.70790      1 #> 220  -0.099496585  72.47083      1 #> 221  -0.416545135 103.37316      0 #> 222  -0.039366920  76.49616      1 #> 223  -0.986579068  78.04058      0 #> 224   1.716244510  74.34800      1 #> 225  -1.365443970  82.35623      0 #> 226   1.132748129  49.12122      0 #> 227  -0.554712241  63.10511      0 #> 228   0.232089126  55.65655      0 #> 229   0.435154630  71.53865      0 #> 230   0.249228467  50.36144      1 #> 231   0.271111882  76.94253      0 #> 232   1.019947744  56.58261      1 #> 233   0.242617819 105.23122      1 #> 234  -0.471502658  73.14774      0 #> 235  -1.067687196  72.78414      0 #> 236   2.324421191  79.70144      0 #> 237  -0.313374555  60.16064      0 #> 238   0.321145506  73.86647      1 #> 239   1.489253381  43.18266      0 #> 240  -1.716393887  43.64664      0 #> 241   0.556306838  65.44501      1 #> 242  -1.837739617  79.14562      0 #> 243  -1.602001615  80.59089      0 #> 244   1.565894137  84.23650      1 #> 245  -0.029914666  76.90374      0 #> 246  -0.314894333  83.18121      0 #> 247  -1.061531388  94.79376      0 #> 248  -1.649077286  85.51263      0 #> 249   2.436207455  74.49935      0 #> 250   0.500785423  55.03762      0 #> 251  -0.403989575  73.26203      0 #> 252   0.461619347  68.53520      1 #> 253   0.322225096  65.73335      0 #> 254  -2.460932535  76.79507      1 #> 255   1.721619402  61.80315      0 #> 256   1.100332457  74.96164      0 #> 257  -4.151039628  88.18952      0 #> 258  -0.887857974  53.01294      0 #> 259  -1.632356894  78.25501      1 #> 260   0.032979177  63.81088      1 #> 261  -1.539723906  48.72440      0 #> 262  -1.702660804  77.92043      0 #> 263  -1.958978927  68.75618      0 #> 264  -0.167365995  65.77953      0 #> 265  -0.541780825  63.52206      0 #> 266   0.637310706  50.69719      0 #> 267  -0.782693964  75.05675      0 #> 268  -0.243746181  76.26825      0 #> 269   0.896409557  63.42063      1 #> 270   0.487921709  53.54660      1 #> 271  -0.830230715  56.31156      0 #> 272  -0.263512475  69.44648      1 #> 273   1.965297311  48.58741      1 #> 274   0.329101724  50.27280      0 #> 275   0.542519025  48.28345      1 #> 276  -0.798653713  91.70793      1 #> 277  -0.831044836  66.93810      0 #> 278   0.779288826  70.98802      1 #> 279   1.630637631  67.27193      1 #> 280  -1.324643065  69.05961      0 #> 281  -1.848075320  49.22601      0 #> 282  -0.542651311  58.77731      0 #> 283   0.256304541  62.95448      1 #> 284   0.634925400  92.82853      0 #> 285  -0.447237600  76.19273      0 #> 286   1.587564947  76.04073      1 #> 287   0.220950094  73.91954      0 #> 288   0.374678344  76.31794      1 #> 289  -0.526055288  55.35735      0 #> 290   0.045006450  79.81001      1 #> 291  -0.114301397  73.57589      0 #> 292   1.648795711  60.16590      1 #> 293  -1.007067425  76.03575      0 #> 294  -1.165529882  90.05247      0 #> 295   3.350826044  55.61719      1 #> 296   0.984175980  65.21508      1 #> 297  -0.857496426  67.70132      1 #> 298  -0.947781137  57.26066      0 #> 299  -0.373692777  67.72337      0 #> 300   2.162324056  65.84116      1 #> 301  -0.797892305  71.26347      0 #> 302   1.308264455  48.99538      0 #> 303  -0.055985989  79.21212      0 #> 304   0.550587243  57.99104      0 #> 305  -0.750412691  54.59215      1 #> 306   0.576407173  70.36004      0 #> 307   0.241819580  67.11729      1 #> 308   0.315138056  60.09061      0 #> 309   0.970004746  66.43415      1 #> 310  -0.699655675  79.98062      1 #> 311  -0.896903755  81.96711      0 #> 312  -0.072272106  98.24418      0 #> 313  -0.890139132  67.02799      0 #> 314  -1.024425616  59.75699      0 #> 315   0.002850001  83.65484      0 #> 316  -1.042031161  87.86203      0 #> 317  -0.100544019  70.95703      0 #> 318  -1.302519587  76.74440      0 #> 319  -0.147467524  78.66019      0 #> 320  -0.569927044  95.27005      0 #> 321   0.194641161  52.87104      1 #> 322   0.037308833  79.51855      1 #> 323  -0.953676137  63.33611      1 #> 324  -0.452505487  90.98494      1 #> 325  -0.875942418  92.20985      0 #> 326   0.028194718 100.22163      0 #> 327   1.053087025  62.93850      1 #> 328  -0.596312103  58.49853      0 #> 329  -0.334856428  82.54660      1 #> 330  -0.333705953  85.48174      0 #> 331   2.314977839  56.95819      1 #> 332  -1.700391696  61.10485      0 #> 333  -1.382958128  42.92288      0 #> 334  -0.185463710  53.28548      0 #> 335  -0.151079861  73.44796      0 #> 336   0.115098227  64.03618      1 #> 337  -0.499754590  63.41182      0 #> 338   0.033140581  65.07421      0 #> 339   1.140875659  79.10615      1 #> 340  -0.313746394  46.88836      0 #> 341  -0.677753542  75.50692      0 #> 342  -0.363271430  75.20179      0 #> 343   1.594392196  49.15138      1 #> 344   2.971870156  44.30748      0 #> 345  -1.123969872  58.11683      0 #> 346  -0.152856761  56.78641      0 #> 347  -2.206727399  79.39626      1 #> 348  -0.162708337  69.42944      0 #> 349  -0.321966658  59.19390      0 #> 350   0.977811677  89.99768      1 #> 351  -1.872099131  80.55802      1 #> 352  -0.024809691  78.17779      0 #> 353  -0.299119855  63.67917      0 #> 354  -0.698002669  71.78086      0 #> 355  -1.230695022  80.27467      0 #> 356  -0.468932531  79.42759      0 #> 357  -0.353885140  63.08649      1 #> 358  -0.044637760  89.01479      0 #> 359   0.824349604  73.20448      1 #> 360  -1.287085953  92.67578      0 #> 361  -0.273248194  95.80298      0 #> 362   0.052711427  78.26148      1 #> 363  -0.720306263  43.53562      0 #> 364   0.586860574  73.57959      0 #> 365   1.895718722  57.78015      1 #> 366  -0.169449673  48.46811      0 #> 367   0.156591516  81.38410      0 #> 368  -2.142614508  87.68792      0 #> 369   0.686531894  66.62671      0 #> 370  -1.685125432  85.45052      0 #> 371  -1.533604026  79.85190      1 #> 372  -0.053851648  84.08569      1 #> 373   0.212628808  93.83022      0 #> 374   1.469244705  82.50769      1 #> 375  -0.231695237  85.17154      0 #> 376  -0.628991310  66.68868      0 #> 377  -1.269027135  69.20533      0 #> 378  -0.459988096  82.32939      0 #> 379   0.624660582  72.39171      0 #> 380  -1.197870433  94.10845      0 #> 381  -0.831357117  60.35914      0 #> 382  -0.577880485  91.89609      0 #> 383  -0.133583846  58.91741      0 #> 384  -0.150535657  58.32205      1 #> 385   0.578598607  95.48841      1 #> 386  -1.169511024  70.64296      0 #> 387  -0.183223341  75.30779      0 #> 388  -0.375883172  61.80226      0 #> 389  -0.011226668  69.17783      0 #> 390  -0.338883769  65.15385      0 #> 391  -0.056550129  83.17843      1 #> 392   0.798864725  78.92535      1 #> 393   0.848963255  42.95933      1 #> 394  -1.181078938  69.24964      0 #> 395  -0.793803319  94.42755      0 #> 396   1.857297809  60.82206      1 #> 397  -0.652324037  97.59329      0 #> 398   3.597731512  52.23101      1 #> 399  -0.211901383  71.25337      0 #> 400   0.695659591  52.98563      1 #> 401   0.688905381  63.51336      0 #> 402  -0.001842876  73.58222      0 #> 403  -1.291476761  82.45604      1 #> 404   1.560940357  62.86217      1 #> 405  -0.286020577  64.52501      0 #> 406  -1.932575411  52.95226      0 #> 407  -0.757057193  65.65486      0 #> 408   1.277465553  88.36466      1 #> 409   0.898151868  49.23382      1 #> 410   0.473609920  84.59805      1 #> 411   0.319500835  90.38820      1 #> 412   0.589582259  66.14253      0 #> 413   0.297239714  74.61761      1 #> 414  -0.140897422  44.51898      1 #> 415   0.666684957  45.21885      1 #> 416  -0.493553261  49.60338      1 #> 417  -2.283521173  69.67025      0 #> 418   0.382222176  49.47992      1 #> 419  -0.447172535  75.08584      0 #> 420   0.184972759  64.63902      1 #> 421  -1.367964094  70.09902      0 #> 422   0.017391051  79.00636      0 #> 423  -0.136786281  97.92018      1 #> 424   0.324144005  93.74817      1 #> 425   1.783536581  71.79931      1 #> 426  -0.617793157  64.16442      0 #> 427   0.339189505  50.53752      1 #> 428   0.659794375  74.12394      0 #> 429  -0.984810341  79.43918      0 #> 430  -1.178162710  86.85433      0 #> 431   1.315085508  53.06688      1 #> 432   0.534186762  64.71900      0 #> 433   0.945236225  70.27180      0 #> 434   0.406677410  85.45424      0 #> 435   1.558879059  52.13489      1 #> 436  -0.366902236  84.24454      0 #> 437  -0.449762186  72.05179      1 #> 438   2.139609903  60.65670      1 #> 439   0.106978163  88.10917      0 #> 440   0.384911211  71.71846      0 #> 441   0.837476334  80.92788      1 #> 442   1.133236592  79.52874      1 #> 443  -0.556796094 101.32358      0 #> 444   0.259290484  63.02356      0 #> 445   1.774425315  56.20089      1 #> 446   0.601474472  42.54199      1 #> 447   0.111206795  53.88855      1 #> 448  -0.489059088  77.59915      0 #> 449   0.271496067  78.05347      1 #> 450   0.044183058  83.48676      1 #> 451   0.257917715  48.73870      0 #> 452   0.452817472  87.88400      1 #> 453   1.172764209  56.11307      1 #> 454  -0.957533733  67.33667      0 #> 455   0.291803181  55.55947      1 #> 456  -0.775026313  81.56488      0 #> 457   0.231679664  78.40724      1 #> 458   0.174219902  68.36892      1 #> 459  -0.028417367  51.70824      1 #> 460   0.642497916  83.42495      0 #> 461  -0.968377331  66.64217      1 #> 462  -0.053721929  58.35978      1 #> 463   0.336372435  60.29826      0 #> 464  -1.436630113  65.72071      1 #> 465  -0.419095211  46.39359      0 #> 466   0.263409463  71.20675      0 #> 467   0.293039635  69.37828      0 #> 468  -0.660216218  76.19730      1 #> 469  -0.448239680  92.13589      0 #> 470   0.211814669  80.57219      0 #> 471   0.316495802  83.64683      1 #> 472   0.321780402  76.53336      1 #> 473  -0.597433943  97.34913      0 #> 474  -1.046592720  67.11882      1 #> 475  -0.302893686  76.21491      0 #> 476  -0.125326529  81.31118      0 #> 477   0.653999096  71.08122      0 #> 478   0.385945152  76.97315      1 #> 479  -1.462860032  59.76545      0 #> 480  -1.370177228  87.45044      0 #> 481   2.220464677  62.23587      1 #> 482  -0.107025134  69.34974      0 #> 483   1.108813597  71.26913      1 #> 484   0.141924927  74.07853      0 #> 485   0.136728188  74.98143      1 #> 486  -1.272681136  73.09840      0 #> 487   0.357185492  64.43738      0 #> 488  -0.633765891  69.88316      0 #> 489   0.345230791  69.82302      1 #> 490   1.077440115  46.53201      0 #> 491   0.562699071  71.15780      1 #> 492  -0.735173725  73.17211      0 #> 493  -0.737127612  82.14181      0 #> 494  -0.581754103  82.12442      0 #> 495   0.686942384  75.43861      1 #> 496  -1.401442414  81.12567      0 #> 497   0.984041241  76.69756      1 #> 498   2.087576662  82.24599      0 #> 499   0.389812103  52.37876      1 #> 500  -1.357968067  83.29820      0 #> 501   0.743489365  75.16081      1 #> 502  -0.532316853  58.32153      0 #> 503   0.757779969  65.44420      0 #> 504   0.153677910  86.26048      1 #> 505  -0.766726410  61.50999      0 #> 506  -0.486374934  76.16607      0 #> 507  -0.379686410  74.85497      0 #> 508   0.019996188  80.55193      0 #> 509  -1.760302597  99.70560      0 #> 510  -0.141574737  67.62883      0 #> 511  -0.795023945  68.93405      0 #> 512   0.583156836  69.55691      0 #> 513  -2.305786361 101.80887      0 #> 514   1.150610217  80.05043      0 #> 515   0.433907769  63.04381      0 #> 516  -0.596852852  84.33615      0 #> 517   0.193705612  51.99165      1 #> 518  -1.523084966  86.11431      0 #> 519  -2.203123049  82.56582      0 #> 520   1.138586576  72.42691      1 #> 521  -0.289010441  66.18583      1 #> 522  -0.148038406  78.65869      0 #> 523  -0.454919651  81.17995      0 #> 524   0.082422667  78.51968      0 #> 525   1.229409478  71.31722      0 #> 526  -0.752722275 101.95222      1 #> 527  -0.473912052  58.38317      0 #> 528  -2.592222837  55.80022      0 #> 529   1.592088882  49.75255      1 #> 530  -0.635317150 102.32923      0 #> 531   0.854056679  71.32751      1 #> 532   1.700553547  48.87225      1 #> 533  -0.192155766  80.57736      0 #> 534   1.793098196  56.04277      0 #> 535   1.288309952  51.08780      1 #> 536  -0.889770240  60.29291      0 #> 537   0.310790054  60.20777      0 #> 538   0.815193911  75.18028      0 #> 539   0.916769119  73.76192      0 #> 540  -2.008576197  83.36471      0 #> 541   1.089222488  86.51305      0 #> 542  -0.195120258  78.54869      0 #> 543   0.498102737  72.64138      0 #> 544  -0.236644448  52.66732      0 #> 545  -0.896881048  57.22926      0 #> 546  -0.463427793  54.87271      0 #> 547   0.713607387  57.08715      0 #> 548  -1.199755288  62.87822      0 #> 549  -0.358617055  65.62116      0 #> 550  -1.329883284  76.89183      1 #> 551  -0.617129726  73.65036      0 #> 552   1.140302995  58.42500      0 #> 553  -1.294952403  83.53646      0 #> 554  -0.318839896  66.37466      0 #> 555   1.222210566  86.27515      0 #> 556   1.634400208  73.08017      1 #> 557   1.917382635  61.78367      1 #> 558  -0.502954884  48.09052      0 #> 559  -1.146905228  71.44932      0 #> 560   0.825302238  64.63304      0 #> 561  -0.954297641  52.77611      1 #> 562  -1.961922720  85.32847      0 #> 563  -0.926327419  77.82472      1 #> 564  -0.885967504  45.64096      0 #> 565   0.411250104  59.72217      0 #> 566   0.048383840  72.61415      1 #> 567   0.873952265  75.73982      1 #> 568  -0.706691993  41.29882      0 #> 569  -0.324308371  68.16377      1 #> 570   0.914147187  77.66212      1 #> 571  -0.143014606  52.57632      1 #> 572   0.980157607  60.95608      0 #> 573   2.672705262  66.75834      1 #> 574   0.121283704  66.31767      0 #> 575  -0.004079530  44.94464      0 #> 576  -0.155864114  77.39439      1 #> 577  -1.135743905  70.08727      0 #> 578  -0.883074019  57.62239      0 #> 579  -0.370215037  81.14130      0 #> 580  -0.307226946  85.76635      0 #> 581  -0.194675624  64.19951      0 #> 582  -2.855504473  71.71160      0 #> 583   0.052621848  57.14012      0 #> 584   1.005450122  54.11482      1 #> 585  -0.052455156  72.44667      0 #> 586   1.457864099  57.44125      1 #> 587  -1.235835358  80.41352      0 #> 588  -0.791325745  63.10402      0 #> 589   0.164941032  86.59070      0 #> 590   0.991598645  78.12414      0 #> 591  -1.383735349  65.01331      0 #> 592   0.052979010  63.69091      1 #> 593  -0.217603959  69.62860      1 #> 594  -0.522189316  84.95166      1 #> 595  -0.658691014  96.61603      0 #> 596  -0.535903176  74.94797      0 #> 597   2.013777746  59.17006      1 #> 598   2.549542282  73.77711      1 #> 599  -0.042900282  59.23258      0 #> 600  -0.210774297  70.92249      0 #> 601   1.548246406  76.42063      1 #> 602   0.139742242  56.49874      0 #> 603  -0.849293166  62.30473      0 #> 604  -1.516497672  78.41835      0 #> 605  -0.506498519  85.75844      0 #> 606   0.717721755  67.29722      0 #> 607   1.272541214  69.11526      1 #> 608  -0.328038505  54.17310      0 #> 609  -0.300500264  82.32133      0 #> 610   0.241988985  68.09092      0 #> 611   0.599140478  56.74698      0 #> 612   0.233621343  58.00850      0 #> 613  -0.572341669  72.74709      1 #> 614  -2.374046689  48.21010      0 #> 615  -0.295807532  58.42702      1 #> 616  -0.790642829  81.01955      0 #> 617  -0.572565171  47.18633      0 #> 618  -1.066968320  74.05472      0 #> 619  -2.648059858  47.17180      0 #> 620   0.297884323  71.04479      1 #> 621  -1.342923161  80.07355      0 #> 622   2.810078541  81.77515      0 #> 623  -1.550125368  93.48449      0 #> 624   1.998412572  51.75902      1 #> 625  -1.663218356  83.61605      0 #> 626   1.190566867  78.73358      1 #> 627  -1.203284244  95.04392      0 #> 628  -1.147420108  79.79124      0 #> 629   0.981763751  71.47835      1 #> 630   1.515936643  60.55515      0 #> 631  -1.176207969  91.78371      0 #> 632  -0.824376921  79.92445      1 #> 633  -0.483294422  56.44230      0 #> 634   0.368206141  51.00890      0 #> 635  -0.914810937  71.93843      0 #> 636  -0.782852343  83.42547      0 #> 637  -0.371541916  83.35285      0 #> 638   1.445582429  74.95892      1 #> 639   0.311670371  50.02153      0 #> 640   1.179060163  56.67973      1 #> 641   0.301324143  76.24572      0 #> 642   0.070519276  78.25412      1 #> 643  -0.118458234  74.43461      0 #> 644  -0.333050729  67.40416      0 #> 645   0.752750280  55.98871      0 #> 646  -0.118879162  57.17796      0 #> 647  -0.252946590  86.91621      1 #> 648   1.213626902  73.82562      1 #> 649   1.689652691  74.91069      1 #> 650  -1.309703498  59.20940      1 #> 651  -1.018829452  53.10585      0 #> 652  -1.591572052  68.80731      0 #> 653  -1.878053355  52.54817      0 #> 654  -0.936913088  98.88401      0 #> 655  -0.034210968  65.20965      0 #> 656   2.602662749  47.04070      1 #> 657   0.790068180  83.62042      1 #> 658   0.945874540  72.37229      0 #> 659   0.894300097  81.68435      0 #> 660   0.579450121  83.38210      1 #> 661   0.614469804  61.79263      1 #> 662  -0.732764842  64.93971      0 #> 663   1.135208480  89.76738      0 #> 664  -0.342993506  77.17406      0 #> 665   0.733383220  49.33972      1 #> 666   0.795955277  54.21442      0 #> 667  -1.549774256  89.96387      1 #> 668  -0.823387790  69.38323      0 #> 669  -1.458428415  55.74609      0 #> 670   0.292869160  83.68836      1 #> 671  -0.490624755  56.82229      0 #> 672  -0.934147366  97.51192      0 #> 673  -0.615825222  86.13770      1 #> 674   1.406102909  67.54377      0 #> 675   0.988859743  55.35405      1 #> 676  -0.084227478  77.84511      0 #> 677   0.150048522  85.30181      0 #> 678  -1.917524779  67.92948      0 #> 679  -0.847958971  81.34681      0 #> 680   0.866653579  81.96146      1 #> 681  -1.521088299  79.62522      0 #> 682  -0.291412083  76.62820      0 #> 683   0.435922692  53.93210      0 #> 684  -0.582699773  65.90094      1 #> 685   1.344636681  73.22954      0 #> 686  -2.041660181  84.57439      1 #> 687  -2.355230298  64.44380      0 #> 688   0.743238795  67.04864      1 #> 689  -1.631604521  83.75449      0 #> 690   0.607321189  72.88151      0 #> 691   0.365877104  75.73841      0 #> 692  -0.529973692  87.78997      0 #> 693  -1.765685570  78.32814      0 #> 694  -0.774845714  71.90564      1 #> 695   0.554007102  53.14996      0 #> 696   2.059048493  52.01547      1 #> 697   0.518416961  57.56170      1 #> 698   1.507698032  68.30999      1 #> 699  -0.323392757  71.30717      0 #> 700  -0.153448407  79.89670      1 #> 701   1.508815755  59.89389      1 #> 702  -1.406828238  84.09145      0 #> 703  -2.098680689  80.11396      0 #> 704   0.472659161  50.19998      0 #> 705  -0.554396677  56.61078      0 #> 706   0.024098278  78.29241      0 #> 707   0.183964175  80.61693      1 #> 708  -0.450099428  81.38425      1 #> 709  -0.905897579  85.18455      0 #> 710  -0.293311450  70.46658      0 #> 711   0.939501759  69.54094      1 #> 712   0.969867299  62.90876      0 #> 713   0.006166679  54.37710      0 #> 714  -1.106559285  77.91797      0 #> 715  -0.981082762  52.52372      0 #> 716   2.241051990  68.79793      1 #> 717   1.291864343  71.29577      1 #> 718  -0.163893180  51.48747      1 #> 719  -0.707436335  67.98486      1 #> 720   0.022422436  66.69469      0 #> 721   1.346232403  64.45237      1 #> 722  -1.655053955 100.49402      0 #> 723  -1.718621613  80.13385      1 #> 724  -0.106894451  65.35218      0 #> 725  -0.058330492  43.10819      0 #> 726  -1.482854063  83.53691      0 #> 727   0.106771660  80.32297      0 #> 728   0.191954399  87.70549      1 #> 729   0.931195608  52.80606      1 #> 730   1.445163821  64.82346      1 #> 731  -0.031112447  77.62594      0 #> 732   1.221307840  82.18370      1 #> 733   0.715957892  46.43663      1 #> 734   0.895886155  79.39866      1 #> 735  -1.483931543  51.45403      0 #> 736  -1.189937677  82.06182      1 #> 737  -0.285605136  75.19457      0 #> 738   0.596883070  94.42016      0 #> 739   0.470925494  55.96350      0 #> 740   0.613352399  82.86933      1 #> 741  -1.973997202  90.82834      0 #> 742   1.397714608  75.28442      1 #> 743   0.351234619  72.65655      1 #> 744  -0.897575085  65.75578      0 #> 745   0.888021156  79.60610      1 #> 746   0.260596278  60.13458      1 #> 747   0.189793453  71.48718      0 #> 748   1.078527190  80.31140      0 #> 749  -0.598645492  73.20255      0 #> 750  -1.211944623  48.52730      0 #> 751  -1.381306498  64.10785      0 #> 752  -0.097937469  78.98204      1 #> 753  -0.978688447  63.72068      1 #> 754  -0.518884106  53.81813      0 #> 755  -0.224270234  47.62344      0 #> 756  -1.379183109  55.39758      1 #> 757   1.154620504  70.65725      1 #> 758  -0.143605984  76.66276      1 #> 759  -0.155884885  74.93618      0 #> 760   1.633075470  82.61355      1 #> 761  -0.425468926  82.88653      0 #> 762   0.893490790  84.80309      1 #> 763  -0.731668833  67.01486      0 #> 764   1.641055228  55.84994      1 #> 765   1.107920473  58.50471      0 #> 766  -1.305041749  66.61057      0 #> 767  -1.277198715  79.98131      0 #> 768   1.876108334  56.84940      1 #> 769   1.258709538  51.28998      1 #> 770  -0.910263756  74.65312      0 #> 771   1.017308653  76.57995      1 #> 772   0.237816411  75.42030      1 #> 773   1.836718200  80.77447      1 #> 774  -1.970187247  78.24502      0 #> 775  -2.182931953  58.28600      0 #> 776   0.633312013  65.77928      0 #> 777   0.003494925  66.42365      0 #> 778  -0.283641332  56.36908      1 #> 779  -0.526001044  65.23795      0 #> 780  -0.821105443  64.14529      0 #> 781  -0.774667319  54.09581      1 #> 782   2.627189997  64.86642      1 #> 783   0.201717027  73.33436      0 #> 784  -0.651370170  73.77358      0 #> 785   0.988333964  84.03229      0 #> 786  -0.698939862 103.14281      0 #> 787  -1.623192099  70.75469      0 #> 788  -0.313189456  54.02633      0 #> 789  -0.723867860  51.53218      0 #> 790  -0.303239693  77.43892      1 #> 791   1.476626753  70.27217      1 #> 792   1.587539377  74.39702      1 #> 793  -0.445111491  58.37012      0 #> 794  -0.185841050  68.51610      0 #> 795   0.430929647  61.57980      1 #> 796   0.630799300  55.54605      0 #> 797   1.896959760  68.65753      1 #> 798   1.824022666  63.01331      1 #> 799  -0.921333953  84.83331      0 #> 800   1.399810249  60.83344      0 #> 801   0.085067870  68.93191      0 #> 802   0.502719644  60.90249      0 #> 803   0.551130580  80.85309      1 #> 804   0.190046181  88.50828      1 #> 805   0.480009508  78.65675      0 #> 806  -1.740887380  44.88269      0 #> 807  -0.469534616  76.96472      0 #> 808   0.724436916  88.96603      1 #> 809   1.063941866  89.78736      0 #> 810  -1.792187958 102.31174      0 #> 811   0.573198547  76.16756      0 #> 812  -0.667531682  79.58967      0 #> 813   0.001508449  65.90271      0 #> 814  -0.371813946  68.88667      0 #> 815   0.065186436  71.45560      0 #> 816  -0.369147288  65.78222      0 #> 817   0.340901957 100.65582      1 #> 818   0.693919641  58.28107      1 #> 819   0.594203364  82.36012      1 #> 820  -0.325858840  71.17370      1 #> 821  -1.221694003  58.92815      0 #> 822  -0.274558553  81.01523      1 #> 823   0.906633255  72.73702      0 #> 824  -0.758782833  93.93600      0 #> 825  -0.155213790  53.65129      0 #> 826  -0.181221599  81.30535      0 #> 827  -1.246318994  77.63565      0 #> 828  -0.037801520  65.46073      0 #> 829   0.543508615  63.75165      1 #> 830  -0.607054623  64.90084      0 #> 831   1.069044811  62.72874      1 #> 832   0.320412661  64.97977      1 #> 833   0.593798186  77.70331      0 #> 834   1.940286685  67.70740      1 #> 835   1.978507152  65.14888      1 #> 836  -1.311626701  79.43031      0 #> 837   0.364241476  50.66021      0 #> 838  -0.576366084  71.53449      0 #> 839  -0.885723188  68.65599      1 #> 840  -0.003790158  71.21513      0 #> 841   1.235967350  70.29666      0 #> 842   0.488367708  69.54952      1 #> 843   0.209287136  52.14445      0 #> 844   0.660109630  46.50761      0 #> 845   0.896470662  49.22920      1 #> 846  -1.314126243  62.67597      0 #> 847  -0.574649474  61.46073      0 #> 848   1.511706657  50.65191      0 #> 849  -1.040864653  75.16165      0 #> 850  -0.321942208  54.22434      0 #> 851   0.087166729  64.97144      1 #> 852  -0.224588362  83.67297      0 #> 853  -0.003597122  58.18720      0 #> 854  -2.143300463 102.27803      0 #> 855  -0.036777033  75.74574      1 #> 856   1.675570733  81.76368      1 #> 857   1.080627834  79.36885      1 #> 858  -0.441725480  46.19695      0 #> 859   1.831370806  56.34261      1 #> 860   0.159801582  85.13792      0 #> 861  -0.272758985  63.02395      1 #> 862   2.096156306  48.14581      0 #> 863   1.957588987  69.93699      0 #> 864  -0.663466474  63.58823      1 #> 865  -1.419263202  76.11434      0 #> 866  -1.387594637  49.04654      0 #> 867   1.246575577  57.30795      0 #> 868   1.351589089  61.18727      1 #> 869  -1.187025279  77.47040      0 #> 870   0.778187546  65.88831      0 #> 871  -0.245750699  78.65707      0 #> 872   1.994029011  62.24503      1 #> 873   2.306924485  68.43893      1 #> 874  -0.136505657  80.11318      0 #> 875  -0.385217657  82.23189      0 #> 876  -0.749321017  66.02601      0 #> 877  -1.119356714  67.69749      0 #> 878  -0.665297883  65.11211      0 #> 879  -1.500487224  93.08544      0 #> 880  -1.067550049  53.10507      0 #> 881  -2.540621383  74.16746      0 #> 882  -0.617204464  61.70512      0 #> 883  -1.310654087  62.30101      1 #> 884   0.929631506  71.79070      0 #> 885   0.022876837  65.00701      0 #> 886   1.737209017  65.28135      1 #> 887   0.838551071  59.10876      1 #> 888  -0.680581630  84.76813      0 #> 889  -0.722598579  69.44297      0 #> 890  -0.577521473  68.04277      0 #> 891   0.327894791  79.60837      1 #> 892  -0.614680786  79.91634      0 #> 893   1.026717716  67.38635      1 #> 894   0.453039037  81.77482      1 #> 895   0.391324045  62.20514      0 #> 896  -0.539817251  75.91581      1 #> 897  -0.626550120  81.95791      0 #> 898   0.516380725  73.55825      0 #> 899   0.950326109  73.39941      1 #> 900  -0.442360131  87.35335      0 #> 901   1.152720153  50.48138      1 #> 902  -1.739549540  68.74122      0 #> 903  -0.860060922  56.23103      0 #> 904   0.475453094  87.82244      1 #> 905   1.407611959  71.02860      1 #> 906  -0.483300694  97.21327      0 #> 907  -0.475478117  63.90436      0 #> 908  -0.051597865  54.05634      0 #> 909  -0.464599433  83.85226      0 #> 910  -1.379141927  80.23024      0 #> 911  -1.367798555  80.59069      0 #> 912  -0.679402615  81.57441      0 #> 913  -1.400469302  78.68212      0 #> 914  -1.368268179  70.54441      0 #> 915   0.516685787  50.92280      0 #> 916   0.866821951  90.27723      0 #> 917   0.744786099  45.57245      0 #> 918   1.156393229  80.97788      1 #> 919  -0.645603818  65.59991      0 #> 920   0.181399129  78.33557      0 #> 921  -0.837994589  91.87918      0 #> 922   1.256201076  66.32478      0 #> 923   1.066744728  70.39474      1 #> 924  -0.871027270  51.39478      0 #> 925   0.902641716  65.37434      1 #> 926   2.261891271  76.72449      1 #> 927  -0.036175144 100.01520      1 #> 928   0.822492211  60.17973      1 #> 929   1.252651381  47.17131      0 #> 930   0.392367029  62.80954      0 #> 931  -0.020215391  66.62306      0 #> 932   0.407903823  57.63629      0 #> 933   0.866915561  50.68528      1 #> 934   1.226112336  88.90118      1 #> 935  -1.429368577  60.46763      0 #> 936  -1.139122895  66.72148      0 #> 937  -0.099946960  49.01674      0 #> 938   0.746118021  41.29399      0 #> 939   1.410092498  53.32297      1 #> 940   1.224139668  62.96483      1 #> 941   0.675372487  59.12345      1 #> 942   0.033167271  68.17917      1 #> 943   0.754747393  76.61368      0 #> 944   1.344782943  79.32738      1 #> 945  -0.904063546  54.04420      0 #> 946  -0.516188803  66.34856      0 #> 947   0.285135944  80.28279      1 #> 948   1.816716139  73.40387      1 #> 949  -0.399527287  73.01729      1 #> 950   2.458156636  68.74897      1 #> 951   0.801878081  78.96876      1 #> 952   0.025302688  57.95565      1 #> 953   0.211192074  76.18547      0 #> 954  -1.070482676  54.77220      1 #> 955   0.718997294  74.03872      1 #> 956   0.044793616  56.11653      0 #> 957   1.888823030  72.31112      1 #> 958   0.223014032  80.88283      0 #> 959  -2.134966955  87.35397      0 #> 960  -1.738850550  68.39920      1 #> 961   1.009933805  66.44489      1 #> 962   1.918806331  74.92604      1 #> 963   1.154366892  71.38801      1 #> 964   0.896261021  80.43333      1 #> 965   1.299320146  58.82191      1 #> 966   1.017758549  75.21492      0 #> 967  -0.534952772  88.64673      1 #> 968   0.136916077  87.11686      1 #> 969  -0.588113563  54.40290      1 #> 970  -1.282019851  78.53006      0 #> 971   1.341499502  72.70626      1 #> 972  -0.565241966  63.75503      0 #> 973   0.988757628  56.12094      0 #> 974   2.030672058  71.29855      1 #> 975   1.199215574  48.26757      1 #> 976   1.196849068  53.90547      1 #> 977   1.219231286  63.40219      0 #> 978  -0.920510018  77.38759      0 #> 979   0.368058950  65.83568      1 #> 980   1.104020022  79.43676      1 #> 981  -0.891381455  58.74807      1 #> 982  -0.152655204  75.18314      0 #> 983  -1.948904053  55.74003      0 #> 984  -0.466326289  64.71116      0 #> 985   1.262706842  51.53328      0 #> 986  -0.640132458  62.75510      0 #> 987   0.017924266  83.19413      1 #> 988   0.170316663  72.76499      0 #> 989   1.022522144  66.28157      0 #> 990   0.928033355  56.12469      0 #> 991   1.084490676  72.82183      0 #> 992   0.276159314  73.97476      0 #> 993   0.655371810  75.92638      0 #> 994  -0.061962169  42.98554      1 #> 995  -1.166530193  78.38446      0 #> 996   1.067369638  74.14575      1 #> 997   0.258438700  70.09591      0 #> 998   1.088892213  80.33859      1 #> 999  -1.010939709  71.47869      0 #> 1000  1.147795672  67.29726      1 #>  #> $bootstrap.iterations #> NULL #>  #> attr(,\"class\") #> [1] \"phsfit\""},{"path":"https://amorris28.github.io/hazrd/reference/get_cindex.html","id":null,"dir":"Reference","previous_headings":"","what":"Return concordance index (C-index) from a PHS model — get_cindex","title":"Return concordance index (C-index) from a PHS model — get_cindex","text":"get_cindex() calculates concordance index either fitted PHS object (phsfit) directly data.frame. Optionally, bootstrap confidence intervals can computed.","code":""},{"path":"https://amorris28.github.io/hazrd/reference/get_cindex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return concordance index (C-index) from a PHS model — get_cindex","text":"","code":"get_cindex(object, ...)  # S3 method for class 'data.frame' get_cindex(   object,   phs = \"phs\",   age = \"age\",   status = \"status\",   bootstrap.iterations = NULL,   conf.level = 0.95,   ... )  # S3 method for class 'phsfit' get_cindex(object, bootstrap.iterations = NULL, conf.level = 0.95, ...)"},{"path":"https://amorris28.github.io/hazrd/reference/get_cindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return concordance index (C-index) from a PHS model — get_cindex","text":"object object concordance index desired. Typically data.frame phsfit object. ... Additional arguments (currently ignored). phs Optional string specifying column data containing polygenic hazard scores. Default: \"phs\". age Optional string specifying column data containing ages. Default: \"age\". status Optional string specifying column data containing case-control status (0=censored, 1=event). Default: \"status\". bootstrap.iterations Number bootstrap iterations (used data.frame method precomputed phsfit). conf.level Confidence level intervals (default 0.95).","code":""},{"path":"https://amorris28.github.io/hazrd/reference/get_cindex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return concordance index (C-index) from a PHS model — get_cindex","text":"list containing: value Point estimate concordance index conf.low Lower bound confidence interval (bootstrapped) conf.high Upper bound confidence interval (bootstrapped)","code":""},{"path":"https://amorris28.github.io/hazrd/reference/get_cindex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return concordance index (C-index) from a PHS model — get_cindex","text":"","code":"# Using a data.frame c_index <- get_cindex(test_data, bootstrap.iterations = 300)  # Using a phsfit object phsfit <- fit_phs(test_data, bootstrap.iterations = 300) c_index <- get_cindex(phsfit)"},{"path":"https://amorris28.github.io/hazrd/reference/get_hr.html","id":null,"dir":"Reference","previous_headings":"","what":"Return hazard ratios (HR) from a PHS model — get_hr","title":"Return hazard ratios (HR) from a PHS model — get_hr","text":"get_hr() calculates hazard ratios either fitted PHS object (phsfit) directly data.frame. returns list containing point estimate optionally bootstrap confidence intervals.","code":""},{"path":"https://amorris28.github.io/hazrd/reference/get_hr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return hazard ratios (HR) from a PHS model — get_hr","text":"","code":"get_hr(object, ...)  # S3 method for class 'data.frame' get_hr(   object,   phs = \"phs\",   age = \"age\",   status = \"status\",   numerator = c(0.8, 1),   denominator = c(0, 0.2),   bootstrap.iterations = NULL,   conf.level = 0.95,   ... )  # S3 method for class 'phsfit' get_hr(   object,   numerator = c(0.8, 1),   denominator = c(0, 0.2),   conf.level = 0.95,   ... )"},{"path":"https://amorris28.github.io/hazrd/reference/get_hr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return hazard ratios (HR) from a PHS model — get_hr","text":"object object hazard ratio desired. Typically data.frame phsfit object. ... Additional arguments (currently ignored) phs optional string specifying column name data containing polygenic hazard score subject. default \"phs\" age optional string specifying column name data containing age subject. cases, age event (e.g., diagnosis) controls age censoring (e.g., last observation). default \"age\" status optional string specifying column name data containing case-control status (0 = censored, 1 = event). default \"status\" numerator Numeric vector quantiles numerator (e.g., c(0.80, 1.0)). denominator Numeric vector quantiles denominator (e.g., c(0.0, 0.2)). bootstrap.iterations Number bootstrap iterations (used data.frame method). conf.level Confidence level intervals (default 0.95).","code":""},{"path":"https://amorris28.github.io/hazrd/reference/get_hr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return hazard ratios (HR) from a PHS model — get_hr","text":"list containing: value Point estimate HR conf.low Lower bound confidence interval (bootstrapped) conf.high Upper bound confidence interval (bootstrapped)","code":""},{"path":"https://amorris28.github.io/hazrd/reference/get_hr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return hazard ratios (HR) from a PHS model — get_hr","text":"","code":"# Using a data.frame HR <- get_hr(test_data, bootstrap.iterations = 300)  # Using a phsfit object phsfit <- fit_phs(test_data, bootstrap.iterations = 300) HR <- get_hr(phsfit)"},{"path":"https://amorris28.github.io/hazrd/reference/get_hrsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the hazard ratio for a 1 standard deviation increase in PHS — get_hrsd","title":"Return the hazard ratio for a 1 standard deviation increase in PHS — get_hrsd","text":"get_hrsd() calculates hazard ratio 1-SD increase polygenic hazard scores either fitted PHS object (phsfit) directly data.frame. Optionally, bootstrap confidence intervals can computed.","code":""},{"path":"https://amorris28.github.io/hazrd/reference/get_hrsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the hazard ratio for a 1 standard deviation increase in PHS — get_hrsd","text":"","code":"get_hrsd(object, ...)  # S3 method for class 'data.frame' get_hrsd(   object,   phs = \"phs\",   age = \"age\",   status = \"status\",   bootstrap.iterations = NULL,   conf.level = 0.95,   ... )  # S3 method for class 'phsfit' get_hrsd(object, bootstrap.iterations = NULL, conf.level = 0.95, ...)"},{"path":"https://amorris28.github.io/hazrd/reference/get_hrsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the hazard ratio for a 1 standard deviation increase in PHS — get_hrsd","text":"object object HRSD desired. Typically data.frame phsfit object. ... Additional arguments (currently ignored). phs Optional string specifying column data containing polygenic hazard scores. Default: \"phs\". age Optional string specifying column data containing ages. Default: \"age\". status Optional string specifying column data containing case-control status (0=censored, 1=event). Default: \"status\". bootstrap.iterations Number bootstrap iterations (used data.frame method precomputed phsfit). conf.level Confidence level intervals (default 0.95).","code":""},{"path":"https://amorris28.github.io/hazrd/reference/get_hrsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the hazard ratio for a 1 standard deviation increase in PHS — get_hrsd","text":"list containing: value Point estimate hazard ratio 1-SD increase PHS conf.low Lower bound confidence interval (bootstrapped) conf.high Upper bound confidence interval (bootstrapped)","code":""},{"path":"https://amorris28.github.io/hazrd/reference/get_hrsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the hazard ratio for a 1 standard deviation increase in PHS — get_hrsd","text":"","code":"# Using a data.frame HRSD <- get_hrsd(test_data, bootstrap.iterations = 300)  # Using a phsfit object phsfit <- fit_phs(test_data, bootstrap.iterations = 300) HRSD <- get_hrsd(phsfit)"},{"path":"https://amorris28.github.io/hazrd/reference/get_or.html","id":null,"dir":"Reference","previous_headings":"","what":"Return odds ratios (OR) from a PHS model at a specified age — get_or","title":"Return odds ratios (OR) from a PHS model at a specified age — get_or","text":"get_or() calculates odds ratios either fitted PHS object (phsfit) directly data.frame specified age. returns list containing point estimate optionally bootstrap confidence intervals.","code":""},{"path":"https://amorris28.github.io/hazrd/reference/get_or.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return odds ratios (OR) from a PHS model at a specified age — get_or","text":"","code":"get_or(object, or_age, ...)  # S3 method for class 'data.frame' get_or(   object,   or_age,   phs = \"phs\",   age = \"age\",   status = \"status\",   numerator = c(0.8, 1),   denominator = c(0, 0.2),   bootstrap.iterations = NULL,   conf.level = 0.95,   ... )  # S3 method for class 'phsfit' get_or(   object,   or_age,   numerator = c(0.8, 1),   denominator = c(0, 0.2),   bootstrap.iterations = NULL,   conf.level = 0.95,   ... )"},{"path":"https://amorris28.github.io/hazrd/reference/get_or.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return odds ratios (OR) from a PHS model at a specified age — get_or","text":"object object odds ratio desired. Typically data.frame phsfit object. or_age Integer specifying age odds ratio calculated. ... Additional arguments (currently ignored) phs optional string specifying column name data containing polygenic hazard score subject. default \"phs\" age optional string specifying column name data containing age subject. cases, age event (e.g., diagnosis) controls age censoring (e.g., last observation). default \"age\" status optional string specifying column name data containing case-control status (0 = censored, 1 = event). default \"status\" numerator Numeric vector quantiles numerator (e.g., c(0.80, 1.0)). denominator Numeric vector quantiles denominator (e.g., c(0.0, 0.2)). bootstrap.iterations Number bootstrap iterations (used data.frame method). conf.level Confidence level intervals (default 0.95).","code":""},{"path":"https://amorris28.github.io/hazrd/reference/get_or.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return odds ratios (OR) from a PHS model at a specified age — get_or","text":"list containing: value Point estimate conf.low Lower bound confidence interval (bootstrapped) conf.high Upper bound confidence interval (bootstrapped)","code":""},{"path":"https://amorris28.github.io/hazrd/reference/get_or.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return odds ratios (OR) from a PHS model at a specified age — get_or","text":"","code":"# Using a data.frame OR <- get_or(test_data, or_age = 70, bootstrap.iterations = 300)  # Using a phsfit object phsfit <- fit_phs(test_data, bootstrap.iterations = 300) OR <- get_or(phsfit, or_age = 70)"},{"path":"https://amorris28.github.io/hazrd/reference/get_phs_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Polygenic Hazard Score Age Calculation — get_phs_age","title":"Polygenic Hazard Score Age Calculation — get_phs_age","text":"Polygenic Hazard Score Age Calculation","code":""},{"path":"https://amorris28.github.io/hazrd/reference/get_phs_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polygenic Hazard Score Age Calculation — get_phs_age","text":"","code":"get_phs_age(age, ref, riskgroup, estimate_age)"},{"path":"https://amorris28.github.io/hazrd/reference/get_phs_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polygenic Hazard Score Age Calculation — get_phs_age","text":"age Vector ages ref Reference scores riskgroup Vector risk group scores estimate_age Age estimate","code":""},{"path":"https://amorris28.github.io/hazrd/reference/get_phs_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polygenic Hazard Score Age Calculation — get_phs_age","text":"Estimated polygenic hazard score age","code":""},{"path":"https://amorris28.github.io/hazrd/reference/get_phs_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polygenic Hazard Score Age Calculation — get_phs_age","text":"","code":"if (FALSE) { # \\dontrun{ phs_age <- get_phs_age(age, ref, riskgroup, estimate_age) } # }"},{"path":"https://amorris28.github.io/hazrd/reference/hazrd-package.html","id":null,"dir":"Reference","previous_headings":"","what":"hazrd: Polygenic Hazard Score with Cox Proportional Hazards Model — hazrd-package","title":"hazrd: Polygenic Hazard Score with Cox Proportional Hazards Model — hazrd-package","text":"Tools compute polygenic hazard scores using Cox proportional hazards model lasso regularization via glmnet.","code":""},{"path":[]},{"path":"https://amorris28.github.io/hazrd/reference/hazrd-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"hazrd: Polygenic Hazard Score with Cox Proportional Hazards Model — hazrd-package","text":"Maintainer: Andrew Morris andrewmorris@mailbox.org","code":""},{"path":"https://amorris28.github.io/hazrd/reference/km_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Kaplan-Meier (K-M) curves from a PHS model — km_curve","title":"Return Kaplan-Meier (K-M) curves from a PHS model — km_curve","text":"km_curve() generic function calculates Kaplan-Meier survival curves coxph fit directly data.frame. returns data.frame time, survival estimates, upper/lower confidence intervals.","code":""},{"path":"https://amorris28.github.io/hazrd/reference/km_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Kaplan-Meier (K-M) curves from a PHS model — km_curve","text":"","code":"km_curve(object, ...)  # S3 method for class 'data.frame' km_curve(   object,   phs = \"phs\",   age = \"age\",   status = \"status\",   interval = c(0, 1),   age_range = 40:100,   scale = FALSE,   inverse = FALSE,   ... )  # S3 method for class 'phsfit' km_curve(   object,   phs = \"phs\",   age = \"age\",   status = \"status\",   interval = c(0, 1),   age_range = 40:100,   scale = FALSE,   inverse = FALSE,   ... )"},{"path":"https://amorris28.github.io/hazrd/reference/km_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Kaplan-Meier (K-M) curves from a PHS model — km_curve","text":"object object KM curve desired. method details, see specific method. ... Additional arguments (currently ignored) phs String specifying column name data containing polygenic hazard score. Default \"phs\". age String specifying column name data containing age subject. Default \"age\". status String specifying column name data containing case/control status (0 = censored, 1 = event). Default \"status\". interval Vector length 2 giving lower upper quantiles PHS define interval. default includes PHSes: c(0, 1). age_range Vector ages curves calculated. Default 40:100. scale Logical; TRUE, centers scales PHS unit variance. Default FALSE. inverse Logical; TRUE, reverses PHS direction. Default FALSE.","code":""},{"path":"https://amorris28.github.io/hazrd/reference/km_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Kaplan-Meier (K-M) curves from a PHS model — km_curve","text":"data.frame columns time, estimate, conf.low, conf.high, cumhaz.","code":""},{"path":"https://amorris28.github.io/hazrd/reference/km_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Kaplan-Meier (K-M) curves from a PHS model — km_curve","text":"","code":"phsfit <- fit_phs(test_data) km_df <- km_curve(phsfit)  # data.frame interface km_df2 <- km_curve(test_data)  if (FALSE) { # \\dontrun{ library(ggplot2) ggplot(km_df, aes(x = time, y = estimate, ymin = conf.low, ymax = conf.high)) +   geom_ribbon() +   geom_step() } # }"},{"path":"https://amorris28.github.io/hazrd/reference/phs_hist.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Histogram of Cases and Controls by PHS — phs_hist","title":"Plot Histogram of Cases and Controls by PHS — phs_hist","text":"function takes PHS scores case/control status plots histogram.","code":""},{"path":"https://amorris28.github.io/hazrd/reference/phs_hist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Histogram of Cases and Controls by PHS — phs_hist","text":"","code":"phs_hist(   data = NULL,   phs = \"phs\",   status = \"status\",   normalize = FALSE,   scale = FALSE,   inverse = FALSE )"},{"path":"https://amorris28.github.io/hazrd/reference/phs_hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Histogram of Cases and Controls by PHS — phs_hist","text":"data optional data.frame containing variables phs, age, status phs optional string specifying column name data containing polygenic hazard score subject unquoted name vector containing values. default \"phs\" status optional string specifying column name data containing case-control status (0 = censored, 1 = event) unquoted name vector containing values. default \"status\" normalize Boolean indicating whether normalize histogram area = 1. replaces y axis denisty instead count. Helpful compare distributions different counts. Default = FALSE. scale Boolean indicating whether center scale PHS scores unit variance. Default = FALSE. inverse Boolean indicating whether inverse (x * -1) PHS scores reverse direction effect. Default = FALSE.","code":""},{"path":"https://amorris28.github.io/hazrd/reference/phs_hist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Histogram of Cases and Controls by PHS — phs_hist","text":"ggplot object","code":""},{"path":"https://amorris28.github.io/hazrd/reference/phs_hist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Histogram of Cases and Controls by PHS — phs_hist","text":"","code":"phs_hist <- phs_hist(test_data, normalize = TRUE)"},{"path":"https://amorris28.github.io/hazrd/reference/phs_input_example.html","id":null,"dir":"Reference","previous_headings":"","what":"PHS Input Example — phs_input_example","title":"PHS Input Example — phs_input_example","text":"set random genotype data","code":""},{"path":"https://amorris28.github.io/hazrd/reference/phs_input_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PHS Input Example — phs_input_example","text":"","code":"phs_input_example"},{"path":[]},{"path":"https://amorris28.github.io/hazrd/reference/phs_input_example.html","id":"phs-input-example","dir":"Reference","previous_headings":"","what":"phs_input_example","title":"PHS Input Example — phs_input_example","text":"data frame 4,000 rows 1,996 columns: age Age diagnosis age censoring subject status Case/control status c11_pos1707163, ... Genotype locus","code":""},{"path":"https://amorris28.github.io/hazrd/reference/test_data.html","id":null,"dir":"Reference","previous_headings":"","what":"PHS Test Data — test_data","title":"PHS Test Data — test_data","text":"simulated dataset PHS scores","code":""},{"path":"https://amorris28.github.io/hazrd/reference/test_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PHS Test Data — test_data","text":"","code":"test_data"},{"path":[]},{"path":"https://amorris28.github.io/hazrd/reference/test_data.html","id":"test-data","dir":"Reference","previous_headings":"","what":"test_data","title":"PHS Test Data — test_data","text":"data frame 1,000 rows 3 columns: phs Polygenic hazard score age Age diagnosis age censoring subject status Case/control status","code":""}]
